<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0613.1930                               -->
<workbook original-version='18.1' source-build='2024.2.0 (20242.24.0613.1930)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <ParameterAction />
    <_.fcp.ParameterActionClearSelection.true...ParameterActionClearSelection />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <_.fcp.MarkAnimation.true...style-rule element='animation'>
      <format attr='animation-style' value='as-phased' />
      <format attr='animation-on' value='ao-on' />
      <format attr='animation-duration' value='0.5' />
    </_.fcp.MarkAnimation.true...style-rule>
  </style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Drill down level' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='1'>
        <calculation class='tableau' formula='1' />
        <range max='4' min='1' />
      </column>
      <column caption='Drill Down Filter' datatype='string' name='[Parameter 2]' param-domain-type='any' role='measure' type='nominal' value='&quot;gmc&#10;yukon xl&#10;sle 1500&quot;'>
        <calculation class='tableau' formula='&quot;gmc&#10;yukon xl&#10;sle 1500&quot;' />
      </column>
    </datasource>
    <datasource caption='test (cars)' inline='true' name='federated.0pggdqi0u9zo791d0fuhu1a5t7h9' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='carsales.c7kuuaege6f8.us-east-2.rds.amazonaws.com' name='mysql.0yprftu1b30f4y1buvcux1m764hc'>
            <connection class='mysql' dbname='cars' odbc-native-protocol='' one-time-sql='' port='3306' server='carsales.c7kuuaege6f8.us-east-2.rds.amazonaws.com' source-charset='' username='admin' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='mysql.0yprftu1b30f4y1buvcux1m764hc' name='data' table='[data]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='mysql.0yprftu1b30f4y1buvcux1m764hc' name='data' table='[data]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>vin</remote-name>
            <remote-type>130</remote-type>
            <local-name>[vin]</local-name>
            <parent-name>[data]</parent-name>
            <remote-alias>vin</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>4294967295</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_86C883078F7B47589C621F31D9C78097]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seller</remote-name>
            <remote-type>130</remote-type>
            <local-name>[seller]</local-name>
            <parent-name>[data]</parent-name>
            <remote-alias>seller</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>4294967295</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_86C883078F7B47589C621F31D9C78097]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mmr</remote-name>
            <remote-type>5</remote-type>
            <local-name>[mmr]</local-name>
            <parent-name>[data]</parent-name>
            <remote-alias>mmr</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_86C883078F7B47589C621F31D9C78097]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sellingprice</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sellingprice]</local-name>
            <parent-name>[data]</parent-name>
            <remote-alias>sellingprice</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_86C883078F7B47589C621F31D9C78097]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>saledate</remote-name>
            <remote-type>7</remote-type>
            <local-name>[saledate]</local-name>
            <parent-name>[data]</parent-name>
            <remote-alias>saledate</remote-alias>
            <ordinal>5</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_86C883078F7B47589C621F31D9C78097]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[data]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_86C883078F7B47589C621F31D9C78097]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>make</remote-name>
            <remote-type>130</remote-type>
            <local-name>[make]</local-name>
            <parent-name>[data]</parent-name>
            <remote-alias>make</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>4294967295</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_86C883078F7B47589C621F31D9C78097]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>model</remote-name>
            <remote-type>130</remote-type>
            <local-name>[model]</local-name>
            <parent-name>[data]</parent-name>
            <remote-alias>model</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>4294967295</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_86C883078F7B47589C621F31D9C78097]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trim</remote-name>
            <remote-type>130</remote-type>
            <local-name>[trim]</local-name>
            <parent-name>[data]</parent-name>
            <remote-alias>trim</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>4294967295</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_86C883078F7B47589C621F31D9C78097]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>transmission</remote-name>
            <remote-type>130</remote-type>
            <local-name>[transmission]</local-name>
            <parent-name>[data]</parent-name>
            <remote-alias>transmission</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>4294967295</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_86C883078F7B47589C621F31D9C78097]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>130</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[data]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>4294967295</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_86C883078F7B47589C621F31D9C78097]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>condition</remote-name>
            <remote-type>5</remote-type>
            <local-name>[condition]</local-name>
            <parent-name>[data]</parent-name>
            <remote-alias>condition</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_86C883078F7B47589C621F31D9C78097]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>odometer</remote-name>
            <remote-type>5</remote-type>
            <local-name>[odometer]</local-name>
            <parent-name>[data]</parent-name>
            <remote-alias>odometer</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_86C883078F7B47589C621F31D9C78097]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>color</remote-name>
            <remote-type>130</remote-type>
            <local-name>[color]</local-name>
            <parent-name>[data]</parent-name>
            <remote-alias>color</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>4294967295</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_86C883078F7B47589C621F31D9C78097]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>interior</remote-name>
            <remote-type>130</remote-type>
            <local-name>[interior]</local-name>
            <parent-name>[data]</parent-name>
            <remote-alias>interior</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>4294967295</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_86C883078F7B47589C621F31D9C78097]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Make to Model' datatype='string' name='[Calculation_1480558416522571786]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='If [Make Set] THEN [model]&#13;&#10;ELSE [make]&#13;&#10;END' />
      </column>
      <column caption='Country' datatype='string' name='[Calculation_2529897134005563396]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <calculation class='tableau' formula='[Country (group)]' />
      </column>
      <column caption='Drill Down Calc' datatype='integer' name='[Calculation_2647835149956886532]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 1]=1 THEN&#13;&#10;    2&#13;&#10;ELSEIF [Parameters].[Parameter 1]=2 THEN&#13;&#10;    3&#13;&#10;ELSEIF [Parameters].[Parameter 1]=3 THEN&#13;&#10;    4&#13;&#10;END' />
      </column>
      <column caption='Drill Down Label' datatype='string' name='[Calculation_2647835149958365189]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = 1 THEN&#13;&#10;    [make]&#13;&#10;ELSEIF [Parameters].[Parameter 1] = 2 THEN&#13;&#10;    [make] + CHAR(10) + [model]&#13;&#10;ELSEIF [Parameters].[Parameter 1] = 3 THEN&#13;&#10;    [make] + CHAR(10) + [model] + CHAR(10) + [trim]&#13;&#10;ELSEIF [Parameters].[Parameter 1] = 4 THEN&#13;&#10;    [make] + CHAR(10) + [model] + CHAR(10) + [trim]&#13;&#10;END' />
      </column>
      <column caption='Drill Down Chart Filter' datatype='boolean' name='[Calculation_2647835149959933959]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = 1 THEN&#13;&#10;    TRUE&#13;&#10;ELSEIF [Parameters].[Parameter 1] = 2 THEN&#13;&#10;    CONTAINS([Parameters].[Parameter 2],[make])&#13;&#10;ELSEIF [Parameters].[Parameter 1] = 3 THEN&#13;&#10;    CONTAINS([Parameters].[Parameter 2],[make]+CHAR(10)+[model])&#13;&#10;ELSEIF [Parameters].[Parameter 1] = 4 THEN&#13;&#10;    CONTAINS([Parameters].[Parameter 2],[make]+CHAR(10)+[model]+CHAR(10)+[trim])&#13;&#10;END' />
      </column>
      <column datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <calculation class='categorical-bin' column='[state]' new-bin='true'>
          <bin default-name='false' value='&quot;CAN&quot;'>
            <value>&quot;ab&quot;</value>
            <value>&quot;ns&quot;</value>
            <value>&quot;on&quot;</value>
            <value>&quot;qc&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;USA&quot;'>
            <value>&quot;al&quot;</value>
            <value>&quot;az&quot;</value>
            <value>&quot;ca&quot;</value>
            <value>&quot;co&quot;</value>
            <value>&quot;fl&quot;</value>
            <value>&quot;ga&quot;</value>
            <value>&quot;hi&quot;</value>
            <value>&quot;il&quot;</value>
            <value>&quot;in&quot;</value>
            <value>&quot;la&quot;</value>
            <value>&quot;ma&quot;</value>
            <value>&quot;md&quot;</value>
            <value>&quot;mi&quot;</value>
            <value>&quot;mn&quot;</value>
            <value>&quot;mo&quot;</value>
            <value>&quot;ms&quot;</value>
            <value>&quot;nc&quot;</value>
            <value>&quot;ne&quot;</value>
            <value>&quot;nj&quot;</value>
            <value>&quot;nm&quot;</value>
            <value>&quot;nv&quot;</value>
            <value>&quot;ny&quot;</value>
            <value>&quot;oh&quot;</value>
            <value>&quot;ok&quot;</value>
            <value>&quot;or&quot;</value>
            <value>&quot;pa&quot;</value>
            <value>&quot;sc&quot;</value>
            <value>&quot;tn&quot;</value>
            <value>&quot;tx&quot;</value>
            <value>&quot;ut&quot;</value>
            <value>&quot;va&quot;</value>
            <value>&quot;wa&quot;</value>
            <value>&quot;wi&quot;</value>
          </bin>
        </calculation>
      </column>
      <column aggregation='None' datatype='integer' name='[Odometer (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='4' formula='[odometer]' peg='0' size='10631' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='data' datatype='table' name='[__tableau_internal_object_id__].[data_86C883078F7B47589C621F31D9C78097]' role='measure' type='quantitative' />
      <column caption='Color' datatype='string' name='[color]' role='dimension' type='nominal' />
      <column caption='Condition' datatype='real' name='[condition]' role='measure' type='quantitative' />
      <column caption='Interior' datatype='string' name='[interior]' role='dimension' type='nominal' />
      <column caption='Make' datatype='string' name='[make]' role='dimension' semantic-role='' type='nominal' />
      <column caption='Mmr' datatype='real' name='[mmr]' role='measure' type='quantitative' />
      <column caption='Model' datatype='string' name='[model]' role='dimension' type='nominal' />
      <column caption='Odometer' datatype='real' name='[odometer]' role='measure' type='quantitative' />
      <column caption='Saledate' datatype='datetime' name='[saledate]' role='dimension' type='ordinal' />
      <column caption='Seller' datatype='string' name='[seller]' role='dimension' type='nominal' />
      <column caption='Sellingprice' datatype='real' name='[sellingprice]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <semantic-values semantic-role='[State].[Name]'>
          <semantic-value key='&quot;ab&quot;' value='&quot;Alberta&quot;' />
          <semantic-value key='&quot;al&quot;' value='&quot;Alabama&quot;' />
          <semantic-value key='&quot;fl&quot;' value='&quot;Florida&quot;' />
          <semantic-value key='&quot;ma&quot;' value='&quot;Massachusetts&quot;' />
          <semantic-value key='&quot;ms&quot;' value='&quot;Mississippi&quot;' />
          <semantic-value key='&quot;ne&quot;' value='&quot;Nebraska&quot;' />
          <semantic-value key='&quot;ns&quot;' value='&quot;Nova Scotia&quot;' />
          <semantic-value key='&quot;on&quot;' value='&quot;Ontario&quot;' />
          <semantic-value key='&quot;pa&quot;' value='&quot;Pennsylvania&quot;' />
          <semantic-value key='&quot;qc&quot;' value='&quot;Quebec&quot;' />
          <semantic-value key='&quot;sc&quot;' value='&quot;South Carolina&quot;' />
          <semantic-value key='&quot;ut&quot;' value='&quot;Utah&quot;' />
          <semantic-value key='&quot;wa&quot;' value='&quot;Washington&quot;' />
        </semantic-values>
      </column>
      <column caption='Transmission' datatype='string' name='[transmission]' role='dimension' type='nominal' />
      <column caption='Trim' datatype='string' name='[trim]' role='dimension' type='nominal' />
      <column caption='Vin' datatype='string' name='[vin]' role='dimension' type='nominal' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[sellingprice]' derivation='Avg' name='[avg:sellingprice:qk]' pivot='key' type='quantitative' />
      <column-instance column='[model]' derivation='Count' name='[cnt:model:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1480558416522571786]' derivation='None' name='[none:Calculation_1480558416522571786:nk]' pivot='key' type='nominal' />
      <column-instance column='[condition]' derivation='None' name='[none:condition:qk]' pivot='key' type='quantitative' />
      <column-instance column='[make]' derivation='None' name='[none:make:nk]' pivot='key' type='nominal' />
      <column-instance column='[model]' derivation='None' name='[none:model:nk]' pivot='key' type='nominal' />
      <column-instance column='[odometer]' derivation='None' name='[none:odometer:qk]' pivot='key' type='quantitative' />
      <column-instance column='[saledate]' derivation='None' name='[none:saledate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[seller]' derivation='None' name='[none:seller:nk]' pivot='key' type='nominal' />
      <column-instance column='[sellingprice]' derivation='None' name='[none:sellingprice:qk]' pivot='key' type='quantitative' />
      <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
      <column-instance column='[trim]' derivation='None' name='[none:trim:nk]' pivot='key' type='nominal' />
      <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
      <column-instance column='[sellingprice]' derivation='Sum' name='[sum:sellingprice:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Country,Country (group),State)' hidden='true' name='[Action (Country,Country (group),State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_2529897134005563396]' />
          <groupfilter function='level-members' level='[Country (group)]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (DAY(Saledate),Sellingprice)' hidden='true' name='[Action (DAY(Saledate),Sellingprice)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tdy:saledate:ok]' />
          <groupfilter function='level-members' level='[none:sellingprice:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Drill Down Label)' hidden='true' name='[Action (Drill Down Label)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_2647835149958365189]' />
        </groupfilter>
      </group>
      <group caption='Action (Make)' hidden='true' name='[Action (Make)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[make]' />
        </groupfilter>
      </group>
      <group caption='Action (Make,Model,DAY(Saledate),Sellingprice,State,Trim,Year)' hidden='true' name='[Action (Make,Model,DAY(Saledate),Sellingprice,State,Trim,Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[make]' />
          <groupfilter function='level-members' level='[model]' />
          <groupfilter function='level-members' level='[tdy:saledate:ok]' />
          <groupfilter function='level-members' level='[none:sellingprice:ok]' />
          <groupfilter function='level-members' level='[state]' />
          <groupfilter function='level-members' level='[trim]' />
          <groupfilter function='level-members' level='[none:year:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Model)' hidden='true' name='[Action (Model)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[model]' />
        </groupfilter>
      </group>
      <group caption='Action (Trim)' hidden='true' name='[Action (Trim)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[trim]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Condition,Make,Model,Odometer,Saledate,Seller,State,Trim,Year)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:condition:qk]' />
          <groupfilter function='level-members' level='[none:make:nk]' />
          <groupfilter function='level-members' level='[none:model:nk]' />
          <groupfilter function='level-members' level='[none:odometer:qk]' />
          <groupfilter function='level-members' level='[none:saledate:qk]' />
          <groupfilter function='level-members' level='[none:seller:nk]' />
          <groupfilter function='level-members' level='[none:state:nk]' />
          <groupfilter function='level-members' level='[none:trim:nk]' />
          <groupfilter function='level-members' level='[none:year:qk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Mmr,Sellingprice)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:mmr:qk]' />
          <groupfilter function='level-members' level='[none:sellingprice:qk]' />
        </groupfilter>
      </group>
      <group caption='Make Set' name='[Make Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='empty-level' member='[make]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </group>
      <drill-paths>
        <drill-path name='State, Country (group)'>
          <field>[state]</field>
          <field>[Country (group)]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[cnt:model:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:condition:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[sum:condition:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[avg:Calculation_2647835149942874114:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:Calculation_2647835149942874114:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[avg:sellingprice:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:sellingprice:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[sum:sellingprice:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_1480558416522571786:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;chrysler&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;sephia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ford&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;sportage&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;dodge&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;rondo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;volkswagen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;mercedes-benz&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;amanti&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;honda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;forte&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;chevrolet&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;sedona&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;sorento&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;borrego&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;hyundai&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;lexus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;gmc&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;soul&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;rio&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;jeep&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;bmw&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;k900&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;nissan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;spectra&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;optima&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;infiniti&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;cadenza&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;toyota&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='vin' />
        <field-sort-custom-order field='seller' />
        <field-sort-custom-order field='mmr' />
        <field-sort-custom-order field='sellingprice' />
        <field-sort-custom-order field='saledate' />
        <field-sort-custom-order field='year' />
        <field-sort-custom-order field='make' />
        <field-sort-custom-order field='Calculation_1480558416599420944' />
        <field-sort-custom-order field='model' />
        <field-sort-custom-order field='trim' />
        <field-sort-custom-order field='transmission' />
        <field-sort-custom-order field='state' />
        <field-sort-custom-order field='Calculation_2529897133979222017' />
        <field-sort-custom-order field='condition' />
        <field-sort-custom-order field='odometer' />
        <field-sort-custom-order field='Calculation_2647835150032834571' />
        <field-sort-custom-order field='color' />
        <field-sort-custom-order field='interior' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field='Calculation_1480558416522571786' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Drill down level' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='1'>
          <calculation class='tableau' formula='1' />
          <range max='4' min='1' />
        </column>
        <column caption='Drill Down Filter' datatype='string' name='[Parameter 2]' param-domain-type='any' role='measure' type='nominal' value='&quot;gmc&#10;yukon xl&#10;sle 1500&quot;'>
          <calculation class='tableau' formula='&quot;gmc&#10;yukon xl&#10;sle 1500&quot;' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='data' id='data_86C883078F7B47589C621F31D9C78097'>
            <properties context=''>
              <relation connection='mysql.0yprftu1b30f4y1buvcux1m764hc' name='data' table='[data]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.0pggdqi0u9zo791d0fuhu1a5t7h9'>
      <datasources>
        <datasource caption='test (cars)' name='federated.0pggdqi0u9zo791d0fuhu1a5t7h9' />
      </datasources>
      <datasource-dependencies datasource='federated.0pggdqi0u9zo791d0fuhu1a5t7h9'>
        <column-instance column='[odometer]' derivation='None' name='[none:odometer:qk]' pivot='key' type='quantitative' />
        <column-instance column='[saledate]' derivation='None' name='[none:saledate:qk]' pivot='key' type='quantitative' />
        <column caption='Odometer' datatype='real' name='[odometer]' role='measure' type='quantitative' />
        <column caption='Saledate' datatype='datetime' name='[saledate]' role='dimension' type='ordinal' />
      </datasource-dependencies>
      <filter class='quantitative' column='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:odometer:qk]' included-values='in-range'>
        <min>1.0</min>
        <max>708029.0</max>
      </filter>
      <filter class='quantitative' column='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:saledate:qk]' included-values='in-range'>
        <min>#2014-01-01 17:15:00#</min>
        <max>#2015-07-21 09:30:00#</max>
        <target field='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:saledate:qk]' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Highlight 1 (generated) 1' name='[Action3_818EDCD4D93E41C0B64E2E99E16290DB]'>
      <activation auto-clear='true' type='on-hover' />
      <source type='sheet' worksheet='Make/Model' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Make,Make to Model' />
        <param name='target' value='Make/Model' />
      </command>
    </action>
    <action caption='Filter1' name='[Action5_56DDB1B05CC4416FA3CFA79D72EA99BE]'>
      <source dashboard='Dashboard 1' type='sheet' worksheet='Value' />
      <link caption='Filter1' delimiter=',' escape='\' expression='tsl:Dashboard%201?%5Bfederated.0pggdqi0u9zo791d0fuhu1a5t7h9%5D.%5Bodometer%5D~s0=&lt;[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[odometer]~na&gt;&amp;%5Bfederated.0pggdqi0u9zo791d0fuhu1a5t7h9%5D.%5Bsaledate%5D~s0=&lt;[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[saledate]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Value' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter State' name='[Action5_E35A4E7F6F264536AFA93332C7CC8249]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Map' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Map' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <datasources>
      <datasource caption='test (cars)' name='federated.0pggdqi0u9zo791d0fuhu1a5t7h9' />
    </datasources>
    <datasource-dependencies datasource='federated.0pggdqi0u9zo791d0fuhu1a5t7h9'>
      <column caption='Odometer' datatype='real' name='[odometer]' role='measure' type='quantitative' />
      <column caption='Saledate' datatype='datetime' name='[saledate]' role='dimension' type='ordinal' />
    </datasource-dependencies>
    <edit-parameter-action caption='Drill Down' name='[Action6_1F1E8163BDFB4CD89B08793AEDEE0AB5]'>
      <activation type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Make' />
      <agg-type type='average' />
      <_.fcp.ParameterActionClearSelection.true...clear-option type='assign-fixed-value' value='i:1' />
      <params>
        <param name='source-field' value='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[avg:Calculation_2647835149956886532:qk]' />
        <param name='target-parameter' value='[Parameters].[Parameter 1]' />
      </params>
    </edit-parameter-action>
    <edit-parameter-action caption='Filter make/model' name='[Action7_2D739FA54A53435E9E331763100F048A]'>
      <activation type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Make' />
      <agg-type type='attr' />
      <_.fcp.ParameterActionClearSelection.true...clear-option type='do-nothing' value='s:LROOT:' />
      <params>
        <param name='source-field' value='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:Calculation_2647835149958365189:nk]' />
        <param name='target-parameter' value='[Parameters].[Parameter 2]' />
      </params>
    </edit-parameter-action>
  </actions>
  <worksheets>
    <worksheet name='Make'>
      <table>
        <view>
          <datasources>
            <datasource caption='test (cars)' name='federated.0pggdqi0u9zo791d0fuhu1a5t7h9' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Drill down level' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='1'>
              <calculation class='tableau' formula='1' />
              <range max='4' min='1' />
            </column>
            <column caption='Drill Down Filter' datatype='string' name='[Parameter 2]' param-domain-type='any' role='measure' type='nominal' value='&quot;gmc&#10;yukon xl&#10;sle 1500&quot;'>
              <calculation class='tableau' formula='&quot;gmc&#10;yukon xl&#10;sle 1500&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0pggdqi0u9zo791d0fuhu1a5t7h9'>
            <column caption='Country' datatype='string' name='[Calculation_2529897134005563396]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='tableau' formula='[Country (group)]' />
            </column>
            <column caption='Drill Down Calc' datatype='integer' name='[Calculation_2647835149956886532]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1]=1 THEN&#13;&#10;    2&#13;&#10;ELSEIF [Parameters].[Parameter 1]=2 THEN&#13;&#10;    3&#13;&#10;ELSEIF [Parameters].[Parameter 1]=3 THEN&#13;&#10;    4&#13;&#10;END' />
            </column>
            <column caption='Drill Down Label' datatype='string' name='[Calculation_2647835149958365189]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = 1 THEN&#13;&#10;    [make]&#13;&#10;ELSEIF [Parameters].[Parameter 1] = 2 THEN&#13;&#10;    [make] + CHAR(10) + [model]&#13;&#10;ELSEIF [Parameters].[Parameter 1] = 3 THEN&#13;&#10;    [make] + CHAR(10) + [model] + CHAR(10) + [trim]&#13;&#10;ELSEIF [Parameters].[Parameter 1] = 4 THEN&#13;&#10;    [make] + CHAR(10) + [model] + CHAR(10) + [trim]&#13;&#10;END' />
            </column>
            <column caption='Drill Down Chart Filter' datatype='boolean' name='[Calculation_2647835149959933959]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = 1 THEN&#13;&#10;    TRUE&#13;&#10;ELSEIF [Parameters].[Parameter 1] = 2 THEN&#13;&#10;    CONTAINS([Parameters].[Parameter 2],[make])&#13;&#10;ELSEIF [Parameters].[Parameter 1] = 3 THEN&#13;&#10;    CONTAINS([Parameters].[Parameter 2],[make]+CHAR(10)+[model])&#13;&#10;ELSEIF [Parameters].[Parameter 1] = 4 THEN&#13;&#10;    CONTAINS([Parameters].[Parameter 2],[make]+CHAR(10)+[model]+CHAR(10)+[trim])&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[state]' new-bin='true'>
                <bin default-name='false' value='&quot;CAN&quot;'>
                  <value>&quot;ab&quot;</value>
                  <value>&quot;ns&quot;</value>
                  <value>&quot;on&quot;</value>
                  <value>&quot;qc&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;USA&quot;'>
                  <value>&quot;al&quot;</value>
                  <value>&quot;az&quot;</value>
                  <value>&quot;ca&quot;</value>
                  <value>&quot;co&quot;</value>
                  <value>&quot;fl&quot;</value>
                  <value>&quot;ga&quot;</value>
                  <value>&quot;hi&quot;</value>
                  <value>&quot;il&quot;</value>
                  <value>&quot;in&quot;</value>
                  <value>&quot;la&quot;</value>
                  <value>&quot;ma&quot;</value>
                  <value>&quot;md&quot;</value>
                  <value>&quot;mi&quot;</value>
                  <value>&quot;mn&quot;</value>
                  <value>&quot;mo&quot;</value>
                  <value>&quot;ms&quot;</value>
                  <value>&quot;nc&quot;</value>
                  <value>&quot;ne&quot;</value>
                  <value>&quot;nj&quot;</value>
                  <value>&quot;nm&quot;</value>
                  <value>&quot;nv&quot;</value>
                  <value>&quot;ny&quot;</value>
                  <value>&quot;oh&quot;</value>
                  <value>&quot;ok&quot;</value>
                  <value>&quot;or&quot;</value>
                  <value>&quot;pa&quot;</value>
                  <value>&quot;sc&quot;</value>
                  <value>&quot;tn&quot;</value>
                  <value>&quot;tx&quot;</value>
                  <value>&quot;ut&quot;</value>
                  <value>&quot;va&quot;</value>
                  <value>&quot;wa&quot;</value>
                  <value>&quot;wi&quot;</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[Calculation_2647835149956886532]' derivation='Avg' name='[avg:Calculation_2647835149956886532:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sellingprice]' derivation='Avg' name='[avg:sellingprice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[make]' derivation='Count' name='[cnt:make:qk]' pivot='key' type='quantitative' />
            <column caption='Make' datatype='string' name='[make]' role='dimension' semantic-role='' type='nominal' />
            <column caption='Model' datatype='string' name='[model]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_2647835149958365189]' derivation='None' name='[none:Calculation_2647835149958365189:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2647835149959933959]' derivation='None' name='[none:Calculation_2647835149959933959:nk]' pivot='key' type='nominal' />
            <column-instance column='[odometer]' derivation='None' name='[none:odometer:qk]' pivot='key' type='quantitative' />
            <column-instance column='[saledate]' derivation='None' name='[none:saledate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Odometer' datatype='real' name='[odometer]' role='measure' type='quantitative' />
            <column caption='Saledate' datatype='datetime' name='[saledate]' role='dimension' type='ordinal' />
            <column caption='Sellingprice' datatype='real' name='[sellingprice]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;ab&quot;' value='&quot;Alberta&quot;' />
                <semantic-value key='&quot;al&quot;' value='&quot;Alabama&quot;' />
                <semantic-value key='&quot;fl&quot;' value='&quot;Florida&quot;' />
                <semantic-value key='&quot;ma&quot;' value='&quot;Massachusetts&quot;' />
                <semantic-value key='&quot;ms&quot;' value='&quot;Mississippi&quot;' />
                <semantic-value key='&quot;ne&quot;' value='&quot;Nebraska&quot;' />
                <semantic-value key='&quot;ns&quot;' value='&quot;Nova Scotia&quot;' />
                <semantic-value key='&quot;on&quot;' value='&quot;Ontario&quot;' />
                <semantic-value key='&quot;pa&quot;' value='&quot;Pennsylvania&quot;' />
                <semantic-value key='&quot;qc&quot;' value='&quot;Quebec&quot;' />
                <semantic-value key='&quot;sc&quot;' value='&quot;South Carolina&quot;' />
                <semantic-value key='&quot;ut&quot;' value='&quot;Utah&quot;' />
                <semantic-value key='&quot;wa&quot;' value='&quot;Washington&quot;' />
              </semantic-values>
            </column>
            <column caption='Trim' datatype='string' name='[trim]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[Action (Country,Country (group),State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_E35A4E7F6F264536AFA93332C7CC8249]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_2529897134005563396]' />
              <groupfilter function='level-members' level='[Country (group)]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:Calculation_2647835149959933959:nk]'>
            <groupfilter function='member' level='[none:Calculation_2647835149959933959:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:state:nk]'>
            <groupfilter function='level-members' level='[none:state:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:state:nk]</column>
            <column>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:Calculation_2647835149959933959:nk]</column>
            <column>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[Action (Country,Country (group),State)]</column>
            <column>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:odometer:qk]</column>
            <column>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:saledate:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='409' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[Parameters].[Parameter 1]' palette='blue_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[cnt:make:qk]' />
              <color column='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[cnt:make:qk]' />
              <text column='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[avg:Calculation_2647835149956886532:qk]' />
              <text column='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:Calculation_2647835149958365189:nk]' />
              <text column='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[avg:sellingprice:qk]' />
              <text column='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[cnt:make:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Make/Model/Trim:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:Calculation_2647835149958365189:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#000000' fontsize='9'><![CDATA[Avg Price: $<[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[avg:sellingprice:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#000000' fontsize='9'><![CDATA[Sold: <[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[cnt:make:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:Calculation_2647835149958365189:nk]</run>
                <run>&gt;&#10;Avg Price: $&lt;</run>
                <run>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[avg:sellingprice:qk]</run>
                <run>&gt;&#10;Sold: &lt;</run>
                <run>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[cnt:make:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{03FAB1F2-0CCE-472E-900C-3ABE9EDBFE6B}' />
    </worksheet>
    <worksheet name='Make/Model'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Make and Model</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='test (cars)' name='federated.0pggdqi0u9zo791d0fuhu1a5t7h9' />
          </datasources>
          <datasource-dependencies datasource='federated.0pggdqi0u9zo791d0fuhu1a5t7h9'>
            <column caption='avg(0)' datatype='real' name='[Calculation_1480558416522366985]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='avg(0)' />
            </column>
            <column caption='Make to Model' datatype='string' name='[Calculation_1480558416522571786]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [Make Set] THEN [model]&#13;&#10;ELSE [make]&#13;&#10;END' />
            </column>
            <column caption='AVG(0)' datatype='real' name='[Calculation_1480558416523124748]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='AVG(0)' />
            </column>
            <column-instance column='[sellingprice]' derivation='Avg' name='[avg:sellingprice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[make]' derivation='Count' name='[cnt:make:qk]' pivot='key' type='quantitative' />
            <column-instance column='[model]' derivation='Count' name='[cnt:model:qk]' pivot='key' type='quantitative' />
            <column caption='Make' datatype='string' name='[make]' role='dimension' semantic-role='' type='nominal' />
            <column caption='Model' datatype='string' name='[model]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1480558416522571786]' derivation='None' name='[none:Calculation_1480558416522571786:nk]' pivot='key' type='nominal' />
            <column-instance column='[make]' derivation='None' name='[none:make:nk]' pivot='key' type='nominal' />
            <column-instance column='[model]' derivation='None' name='[none:model:nk]' pivot='key' type='nominal' />
            <column-instance column='[odometer]' derivation='None' name='[none:odometer:qk]' pivot='key' type='quantitative' />
            <column-instance column='[saledate]' derivation='None' name='[none:saledate:qk]' pivot='key' type='quantitative' />
            <column caption='Odometer' datatype='real' name='[odometer]' role='measure' type='quantitative' />
            <column caption='Saledate' datatype='datetime' name='[saledate]' role='dimension' type='ordinal' />
            <column caption='Sellingprice' datatype='real' name='[sellingprice]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1480558416522366985]' derivation='User' name='[usr:Calculation_1480558416522366985:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1480558416523124748]' derivation='User' name='[usr:Calculation_1480558416523124748:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:Calculation_1480558416522571786:nk]' direction='DESC' using='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[cnt:model:qk]' />
          <filter class='categorical' column='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:make:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:make:nk]' />
              <groupfilter function='member' level='[none:make:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:make:nk]</column>
            <column>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:odometer:qk]</column>
            <column>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:saledate:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[usr:Calculation_1480558416523124748:qk]' field-type='quantitative' fold='true' scope='cols' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[usr:Calculation_1480558416523124748:qk]' scope='cols' value='false' />
            <format attr='display' class='0' field='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[usr:Calculation_1480558416522366985:qk]' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:make:nk]' />
              <wedge-size column='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[cnt:make:qk]' />
              <lod column='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[avg:sellingprice:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Make:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:make:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Count of Make:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[cnt:make:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Make to Model:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:Calculation_1480558416522571786:nk]>]]></run>
                <run>&#10;Avg. Sell Price:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[avg:sellingprice:qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='6.7580051422119141' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[usr:Calculation_1480558416522366985:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:make:nk]' />
              <wedge-size column='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[cnt:make:qk]' />
              <lod column='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[avg:sellingprice:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Make:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:make:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Count of Make:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[cnt:make:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Make to Model:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:Calculation_1480558416522571786:nk]>]]></run>
                <run>&#10;Avg. Sell Price:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[avg:sellingprice:qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='6.9928369522094727' />
                <format attr='has-stroke' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[usr:Calculation_1480558416523124748:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:make:nk]' />
              <wedge-size column='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[cnt:make:qk]' />
              <lod column='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[avg:sellingprice:qk]' />
              <color column='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:Calculation_1480558416522571786:nk]' />
              <lod column='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:model:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Make:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:make:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Count of Make:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[cnt:make:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Model:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:model:nk]>]]></run>
                <run>&#10;Avg. Sell Price:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[avg:sellingprice:qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='5.9130978584289551' />
                <format attr='mark-transparency' value='193' />
                <format attr='has-stroke' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>([federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[usr:Calculation_1480558416522366985:qk] + [federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[usr:Calculation_1480558416523124748:qk])</cols>
      </table>
      <simple-id uuid='{FBB0D76B-382C-4BDA-A30B-3B6DBDAD1B5E}' />
    </worksheet>
    <worksheet name='Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='test (cars)' name='federated.0pggdqi0u9zo791d0fuhu1a5t7h9' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Drill down level' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='1'>
              <calculation class='tableau' formula='1' />
              <range max='4' min='1' />
            </column>
            <column caption='Drill Down Filter' datatype='string' name='[Parameter 2]' param-domain-type='any' role='measure' type='nominal' value='&quot;gmc&#10;yukon xl&#10;sle 1500&quot;'>
              <calculation class='tableau' formula='&quot;gmc&#10;yukon xl&#10;sle 1500&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0pggdqi0u9zo791d0fuhu1a5t7h9'>
            <column caption='Country' datatype='string' name='[Calculation_2529897134005563396]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='tableau' formula='[Country (group)]' />
            </column>
            <column caption='Drill Down Chart Filter' datatype='boolean' name='[Calculation_2647835149959933959]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = 1 THEN&#13;&#10;    TRUE&#13;&#10;ELSEIF [Parameters].[Parameter 1] = 2 THEN&#13;&#10;    CONTAINS([Parameters].[Parameter 2],[make])&#13;&#10;ELSEIF [Parameters].[Parameter 1] = 3 THEN&#13;&#10;    CONTAINS([Parameters].[Parameter 2],[make]+CHAR(10)+[model])&#13;&#10;ELSEIF [Parameters].[Parameter 1] = 4 THEN&#13;&#10;    CONTAINS([Parameters].[Parameter 2],[make]+CHAR(10)+[model]+CHAR(10)+[trim])&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[state]' new-bin='true'>
                <bin default-name='false' value='&quot;CAN&quot;'>
                  <value>&quot;ab&quot;</value>
                  <value>&quot;ns&quot;</value>
                  <value>&quot;on&quot;</value>
                  <value>&quot;qc&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;USA&quot;'>
                  <value>&quot;al&quot;</value>
                  <value>&quot;az&quot;</value>
                  <value>&quot;ca&quot;</value>
                  <value>&quot;co&quot;</value>
                  <value>&quot;fl&quot;</value>
                  <value>&quot;ga&quot;</value>
                  <value>&quot;hi&quot;</value>
                  <value>&quot;il&quot;</value>
                  <value>&quot;in&quot;</value>
                  <value>&quot;la&quot;</value>
                  <value>&quot;ma&quot;</value>
                  <value>&quot;md&quot;</value>
                  <value>&quot;mi&quot;</value>
                  <value>&quot;mn&quot;</value>
                  <value>&quot;mo&quot;</value>
                  <value>&quot;ms&quot;</value>
                  <value>&quot;nc&quot;</value>
                  <value>&quot;ne&quot;</value>
                  <value>&quot;nj&quot;</value>
                  <value>&quot;nm&quot;</value>
                  <value>&quot;nv&quot;</value>
                  <value>&quot;ny&quot;</value>
                  <value>&quot;oh&quot;</value>
                  <value>&quot;ok&quot;</value>
                  <value>&quot;or&quot;</value>
                  <value>&quot;pa&quot;</value>
                  <value>&quot;sc&quot;</value>
                  <value>&quot;tn&quot;</value>
                  <value>&quot;tx&quot;</value>
                  <value>&quot;ut&quot;</value>
                  <value>&quot;va&quot;</value>
                  <value>&quot;wa&quot;</value>
                  <value>&quot;wi&quot;</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[sellingprice]' derivation='Avg' name='[avg:sellingprice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='Count' name='[cnt:state:qk]' pivot='key' type='quantitative' />
            <column caption='Make' datatype='string' name='[make]' role='dimension' semantic-role='' type='nominal' />
            <column caption='Model' datatype='string' name='[model]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_2529897134005563396]' derivation='None' name='[none:Calculation_2529897134005563396:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2647835149959933959]' derivation='None' name='[none:Calculation_2647835149959933959:nk]' pivot='key' type='nominal' />
            <column-instance column='[odometer]' derivation='None' name='[none:odometer:qk]' pivot='key' type='quantitative' />
            <column-instance column='[saledate]' derivation='None' name='[none:saledate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Odometer' datatype='real' name='[odometer]' role='measure' type='quantitative' />
            <column caption='Saledate' datatype='datetime' name='[saledate]' role='dimension' type='ordinal' />
            <column caption='Sellingprice' datatype='real' name='[sellingprice]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;ab&quot;' value='&quot;Alberta&quot;' />
                <semantic-value key='&quot;al&quot;' value='&quot;Alabama&quot;' />
                <semantic-value key='&quot;fl&quot;' value='&quot;Florida&quot;' />
                <semantic-value key='&quot;ma&quot;' value='&quot;Massachusetts&quot;' />
                <semantic-value key='&quot;ms&quot;' value='&quot;Mississippi&quot;' />
                <semantic-value key='&quot;ne&quot;' value='&quot;Nebraska&quot;' />
                <semantic-value key='&quot;ns&quot;' value='&quot;Nova Scotia&quot;' />
                <semantic-value key='&quot;on&quot;' value='&quot;Ontario&quot;' />
                <semantic-value key='&quot;pa&quot;' value='&quot;Pennsylvania&quot;' />
                <semantic-value key='&quot;qc&quot;' value='&quot;Quebec&quot;' />
                <semantic-value key='&quot;sc&quot;' value='&quot;South Carolina&quot;' />
                <semantic-value key='&quot;ut&quot;' value='&quot;Utah&quot;' />
                <semantic-value key='&quot;wa&quot;' value='&quot;Washington&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[sellingprice]' derivation='Sum' name='[sum:sellingprice:qk]' pivot='key' type='quantitative' />
            <column caption='Trim' datatype='string' name='[trim]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:Calculation_2647835149959933959:nk]'>
            <groupfilter function='member' level='[none:Calculation_2647835149959933959:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:Calculation_2647835149959933959:nk]</column>
            <column>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:odometer:qk]</column>
            <column>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:saledate:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[Longitude (generated)]' field-type='quantitative' max='-5714009.8218812086' min='-14772282.072878769' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[Latitude (generated)]' field-type='quantitative' max='9372489.4452237859' min='1417633.0450448426' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:state:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:state:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:state:nk]' value='false' />
            <format attr='omit-on-special' field='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[Latitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[Latitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[Latitude (generated)]' value='false' />
            <format attr='omit-on-special' field='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[Longitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[Longitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[Longitude (generated)]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[cnt:state:qk]' />
              <lod column='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:state:nk]' />
              <lod column='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[Country (group)]' />
              <lod column='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:Calculation_2529897134005563396:nk]' />
              <lod column='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[sum:sellingprice:qk]' />
              <lod column='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[avg:sellingprice:qk]' />
              <geometry column='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>State:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:state:nk]>]]></run>
                <run>&#10;Quantity: </run>
                <run bold='true'><![CDATA[<[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[cnt:state:qk]>]]></run>
                <run>&#10;Average Sale Price:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[avg:sellingprice:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[Latitude (generated)]</rows>
        <cols>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{40250F82-450A-432E-A80D-A3FC135B59DA}' />
    </worksheet>
    <worksheet name='Model'>
      <table>
        <view>
          <datasources>
            <datasource caption='test (cars)' name='federated.0pggdqi0u9zo791d0fuhu1a5t7h9' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Drill down level' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='1'>
              <calculation class='tableau' formula='1' />
              <range max='4' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0pggdqi0u9zo791d0fuhu1a5t7h9'>
            <column caption='Drill Down Label' datatype='string' name='[Calculation_2647835149958365189]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = 1 THEN&#13;&#10;    [make]&#13;&#10;ELSEIF [Parameters].[Parameter 1] = 2 THEN&#13;&#10;    [make] + CHAR(10) + [model]&#13;&#10;ELSEIF [Parameters].[Parameter 1] = 3 THEN&#13;&#10;    [make] + CHAR(10) + [model] + CHAR(10) + [trim]&#13;&#10;ELSEIF [Parameters].[Parameter 1] = 4 THEN&#13;&#10;    [make] + CHAR(10) + [model] + CHAR(10) + [trim]&#13;&#10;END' />
            </column>
            <column-instance column='[make]' derivation='Count' name='[cnt:make:qk]' pivot='key' type='quantitative' />
            <column caption='Make' datatype='string' name='[make]' role='dimension' semantic-role='' type='nominal' />
            <column caption='Model' datatype='string' name='[model]' role='dimension' type='nominal' />
            <column-instance column='[make]' derivation='None' name='[none:make:nk]' pivot='key' type='nominal' />
            <column-instance column='[model]' derivation='None' name='[none:model:nk]' pivot='key' type='nominal' />
            <column-instance column='[odometer]' derivation='None' name='[none:odometer:qk]' pivot='key' type='quantitative' />
            <column-instance column='[saledate]' derivation='None' name='[none:saledate:qk]' pivot='key' type='quantitative' />
            <column caption='Odometer' datatype='real' name='[odometer]' role='measure' type='quantitative' />
            <column caption='Saledate' datatype='datetime' name='[saledate]' role='dimension' type='ordinal' />
            <column caption='Trim' datatype='string' name='[trim]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[Action (Drill Down Label)]'>
            <groupfilter function='level-members' level='[Calculation_2647835149958365189]' user:ui-action-filter='[Action4_B9A48DB7F43C4544A5D8D1B079CD77C1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[Action (Make)]'>
            <groupfilter function='level-members' level='[make]' user:ui-action-filter='[Action4_B9A48DB7F43C4544A5D8D1B079CD77C1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[Action (Trim)]'>
            <groupfilter function='level-members' level='[trim]' user:ui-action-filter='[Action5_37D47AEB619147F09AF7749F5DEEFE95]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:make:nk]'>
            <groupfilter function='level-members' level='[none:make:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:model:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;aspire&quot;</bucket>
              <bucket>&quot;bronco&quot;</bucket>
              <bucket>&quot;c-max energi&quot;</bucket>
              <bucket>&quot;c-max hybrid&quot;</bucket>
              <bucket>&quot;contour&quot;</bucket>
              <bucket>&quot;crown&quot;</bucket>
              <bucket>&quot;crown victoria&quot;</bucket>
              <bucket>&quot;e&quot;</bucket>
              <bucket>&quot;e150&quot;</bucket>
              <bucket>&quot;e250&quot;</bucket>
              <bucket>&quot;e350&quot;</bucket>
              <bucket>&quot;e-150&quot;</bucket>
              <bucket>&quot;e-250&quot;</bucket>
              <bucket>&quot;e-350&quot;</bucket>
              <bucket>&quot;350&quot;</bucket>
              <bucket>&quot;e-series van&quot;</bucket>
              <bucket>&quot;e-series wagon&quot;</bucket>
              <bucket>&quot;econoline cargo&quot;</bucket>
              <bucket>&quot;econoline wagon&quot;</bucket>
              <bucket>&quot;edge&quot;</bucket>
              <bucket>&quot;escape&quot;</bucket>
              <bucket>&quot;escape hybrid&quot;</bucket>
              <bucket>&quot;escort&quot;</bucket>
              <bucket>&quot;excurs&quot;</bucket>
              <bucket>&quot;excursion&quot;</bucket>
              <bucket>&quot;expedit&quot;</bucket>
              <bucket>&quot;expedition&quot;</bucket>
              <bucket>&quot;expedition el&quot;</bucket>
              <bucket>&quot;expeditn&quot;</bucket>
              <bucket>&quot;explorer&quot;</bucket>
              <bucket>&quot;explorer sport&quot;</bucket>
              <bucket>&quot;explorer sport trac&quot;</bucket>
              <bucket>&quot;f150&quot;</bucket>
              <bucket>&quot;f250&quot;</bucket>
              <bucket>&quot;f350&quot;</bucket>
              <bucket>&quot;f-150&quot;</bucket>
              <bucket>&quot;f-150 heritage&quot;</bucket>
              <bucket>&quot;f-150 svt lightning&quot;</bucket>
              <bucket>&quot;f-250&quot;</bucket>
              <bucket>&quot;f-250 super duty&quot;</bucket>
              <bucket>&quot;f-350 super duty&quot;</bucket>
              <bucket>&quot;f-450 super duty&quot;</bucket>
              <bucket>&quot;fiesta&quot;</bucket>
              <bucket>&quot;five hundred&quot;</bucket>
              <bucket>&quot;flex&quot;</bucket>
              <bucket>&quot;focus&quot;</bucket>
              <bucket>&quot;focus st&quot;</bucket>
              <bucket>&quot;freestar&quot;</bucket>
              <bucket>&quot;freestyle&quot;</bucket>
              <bucket>&quot;fusion&quot;</bucket>
              <bucket>&quot;fusion energi&quot;</bucket>
              <bucket>&quot;fusion hybrid&quot;</bucket>
              <bucket>&quot;mustang&quot;</bucket>
              <bucket>&quot;mustang svt cobra&quot;</bucket>
              <bucket>&quot;police&quot;</bucket>
              <bucket>&quot;ranger&quot;</bucket>
              <bucket>&quot;shelby gt500&quot;</bucket>
              <bucket>&quot;taurus&quot;</bucket>
              <bucket>&quot;taurus x&quot;</bucket>
              <bucket>&quot;tempo&quot;</bucket>
              <bucket>&quot;thunderbird&quot;</bucket>
              <bucket>&quot;transit connect&quot;</bucket>
              <bucket>&quot;transit van&quot;</bucket>
              <bucket>&quot;transit wagon&quot;</bucket>
              <bucket>&quot;windstar&quot;</bucket>
              <bucket>&quot;windstar cargo&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:make:nk]</column>
            <column>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[Action (Make)]</column>
            <column>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[Action (Trim)]</column>
            <column>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[Action (Drill Down Label)]</column>
            <column>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:odometer:qk]</column>
            <column>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:saledate:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='502' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[cnt:make:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[cnt:make:qk]' />
              <color column='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[cnt:make:qk]' />
              <text column='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:model:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{E69DA10A-2A0E-486A-8CD4-CFFCA9D69CDC}' />
    </worksheet>
    <worksheet name='Price/Date'>
      <table>
        <view>
          <datasources>
            <datasource caption='test (cars)' name='federated.0pggdqi0u9zo791d0fuhu1a5t7h9' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Drill down level' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='1'>
              <calculation class='tableau' formula='1' />
              <range max='4' min='1' />
            </column>
            <column caption='Drill Down Filter' datatype='string' name='[Parameter 2]' param-domain-type='any' role='measure' type='nominal' value='&quot;gmc&#10;yukon xl&#10;sle 1500&quot;'>
              <calculation class='tableau' formula='&quot;gmc&#10;yukon xl&#10;sle 1500&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0pggdqi0u9zo791d0fuhu1a5t7h9'>
            <column caption='Country' datatype='string' name='[Calculation_2529897134005563396]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='tableau' formula='[Country (group)]' />
            </column>
            <column caption='Drill Down Chart Filter' datatype='boolean' name='[Calculation_2647835149959933959]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = 1 THEN&#13;&#10;    TRUE&#13;&#10;ELSEIF [Parameters].[Parameter 1] = 2 THEN&#13;&#10;    CONTAINS([Parameters].[Parameter 2],[make])&#13;&#10;ELSEIF [Parameters].[Parameter 1] = 3 THEN&#13;&#10;    CONTAINS([Parameters].[Parameter 2],[make]+CHAR(10)+[model])&#13;&#10;ELSEIF [Parameters].[Parameter 1] = 4 THEN&#13;&#10;    CONTAINS([Parameters].[Parameter 2],[make]+CHAR(10)+[model]+CHAR(10)+[trim])&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[state]' new-bin='true'>
                <bin default-name='false' value='&quot;CAN&quot;'>
                  <value>&quot;ab&quot;</value>
                  <value>&quot;ns&quot;</value>
                  <value>&quot;on&quot;</value>
                  <value>&quot;qc&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;USA&quot;'>
                  <value>&quot;al&quot;</value>
                  <value>&quot;az&quot;</value>
                  <value>&quot;ca&quot;</value>
                  <value>&quot;co&quot;</value>
                  <value>&quot;fl&quot;</value>
                  <value>&quot;ga&quot;</value>
                  <value>&quot;hi&quot;</value>
                  <value>&quot;il&quot;</value>
                  <value>&quot;in&quot;</value>
                  <value>&quot;la&quot;</value>
                  <value>&quot;ma&quot;</value>
                  <value>&quot;md&quot;</value>
                  <value>&quot;mi&quot;</value>
                  <value>&quot;mn&quot;</value>
                  <value>&quot;mo&quot;</value>
                  <value>&quot;ms&quot;</value>
                  <value>&quot;nc&quot;</value>
                  <value>&quot;ne&quot;</value>
                  <value>&quot;nj&quot;</value>
                  <value>&quot;nm&quot;</value>
                  <value>&quot;nv&quot;</value>
                  <value>&quot;ny&quot;</value>
                  <value>&quot;oh&quot;</value>
                  <value>&quot;ok&quot;</value>
                  <value>&quot;or&quot;</value>
                  <value>&quot;pa&quot;</value>
                  <value>&quot;sc&quot;</value>
                  <value>&quot;tn&quot;</value>
                  <value>&quot;tx&quot;</value>
                  <value>&quot;ut&quot;</value>
                  <value>&quot;va&quot;</value>
                  <value>&quot;wa&quot;</value>
                  <value>&quot;wi&quot;</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[sellingprice]' derivation='Avg' name='[avg:sellingprice:qk]' pivot='key' type='quantitative' />
            <column caption='Make' datatype='string' name='[make]' role='dimension' semantic-role='' type='nominal' />
            <column caption='Model' datatype='string' name='[model]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_2647835149959933959]' derivation='None' name='[none:Calculation_2647835149959933959:nk]' pivot='key' type='nominal' />
            <column-instance column='[make]' derivation='None' name='[none:make:nk]' pivot='key' type='nominal' />
            <column-instance column='[odometer]' derivation='None' name='[none:odometer:qk]' pivot='key' type='quantitative' />
            <column-instance column='[saledate]' derivation='None' name='[none:saledate:qk]' pivot='key' type='quantitative' />
            <column caption='Odometer' datatype='real' name='[odometer]' role='measure' type='quantitative' />
            <column caption='Saledate' datatype='datetime' name='[saledate]' role='dimension' type='ordinal' />
            <column caption='Sellingprice' datatype='real' name='[sellingprice]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;ab&quot;' value='&quot;Alberta&quot;' />
                <semantic-value key='&quot;al&quot;' value='&quot;Alabama&quot;' />
                <semantic-value key='&quot;fl&quot;' value='&quot;Florida&quot;' />
                <semantic-value key='&quot;ma&quot;' value='&quot;Massachusetts&quot;' />
                <semantic-value key='&quot;ms&quot;' value='&quot;Mississippi&quot;' />
                <semantic-value key='&quot;ne&quot;' value='&quot;Nebraska&quot;' />
                <semantic-value key='&quot;ns&quot;' value='&quot;Nova Scotia&quot;' />
                <semantic-value key='&quot;on&quot;' value='&quot;Ontario&quot;' />
                <semantic-value key='&quot;pa&quot;' value='&quot;Pennsylvania&quot;' />
                <semantic-value key='&quot;qc&quot;' value='&quot;Quebec&quot;' />
                <semantic-value key='&quot;sc&quot;' value='&quot;South Carolina&quot;' />
                <semantic-value key='&quot;ut&quot;' value='&quot;Utah&quot;' />
                <semantic-value key='&quot;wa&quot;' value='&quot;Washington&quot;' />
              </semantic-values>
            </column>
            <column caption='Trim' datatype='string' name='[trim]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[Action (Country,Country (group),State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_E35A4E7F6F264536AFA93332C7CC8249]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_2529897134005563396]' />
              <groupfilter function='level-members' level='[Country (group)]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:Calculation_2647835149959933959:nk]'>
            <groupfilter function='member' level='[none:Calculation_2647835149959933959:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:Calculation_2647835149959933959:nk]</column>
            <column>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[Action (Country,Country (group),State)]</column>
            <column>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:odometer:qk]</column>
            <column>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:saledate:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <lod column='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:make:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[avg:sellingprice:qk]</rows>
        <cols />
      </table>
      <simple-id uuid='{1C9561EB-51A1-4F5E-AEC5-882FE49083D2}' />
    </worksheet>
    <worksheet name='Sheet 8'>
      <table>
        <view>
          <datasources>
            <datasource caption='test (cars)' name='federated.0pggdqi0u9zo791d0fuhu1a5t7h9' />
          </datasources>
          <datasource-dependencies datasource='federated.0pggdqi0u9zo791d0fuhu1a5t7h9'>
            <column aggregation='None' datatype='integer' name='[Odometer (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='4' formula='[odometer]' peg='0' size='10631' />
            </column>
            <column-instance column='[odometer]' derivation='Count' name='[cnt:odometer:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Odometer (bin)]' derivation='None' name='[none:Odometer (bin):qk]' pivot='key' type='quantitative' />
            <column-instance column='[odometer]' derivation='None' name='[none:odometer:ok]' pivot='key' type='ordinal' />
            <column-instance column='[odometer]' derivation='None' name='[none:odometer:qk]' pivot='key' type='quantitative' />
            <column-instance column='[saledate]' derivation='None' name='[none:saledate:qk]' pivot='key' type='quantitative' />
            <column caption='Odometer' datatype='real' name='[odometer]' role='measure' type='quantitative' />
            <column caption='Saledate' datatype='datetime' name='[saledate]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:odometer:ok]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:odometer:ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:odometer:ok]' member='1.0' />
                <groupfilter function='member' level='[none:odometer:ok]' member='999999.0' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:odometer:ok]</column>
            <column>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:odometer:qk]</column>
            <column>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:saledate:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
          </pane>
        </panes>
        <rows>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[cnt:odometer:qk]</rows>
        <cols>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:Odometer (bin):qk]</cols>
        <show-full-range>
          <column>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[Odometer (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{E4AE066A-29E2-4CED-8A35-2FAF49151D17}' />
    </worksheet>
    <worksheet name='Trim'>
      <table>
        <view>
          <datasources>
            <datasource caption='test (cars)' name='federated.0pggdqi0u9zo791d0fuhu1a5t7h9' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Drill down level' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='1'>
              <calculation class='tableau' formula='1' />
              <range max='4' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0pggdqi0u9zo791d0fuhu1a5t7h9'>
            <column caption='Drill Down Label' datatype='string' name='[Calculation_2647835149958365189]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = 1 THEN&#13;&#10;    [make]&#13;&#10;ELSEIF [Parameters].[Parameter 1] = 2 THEN&#13;&#10;    [make] + CHAR(10) + [model]&#13;&#10;ELSEIF [Parameters].[Parameter 1] = 3 THEN&#13;&#10;    [make] + CHAR(10) + [model] + CHAR(10) + [trim]&#13;&#10;ELSEIF [Parameters].[Parameter 1] = 4 THEN&#13;&#10;    [make] + CHAR(10) + [model] + CHAR(10) + [trim]&#13;&#10;END' />
            </column>
            <column-instance column='[trim]' derivation='Count' name='[cnt:trim:qk]' pivot='key' type='quantitative' />
            <column caption='Make' datatype='string' name='[make]' role='dimension' semantic-role='' type='nominal' />
            <column caption='Model' datatype='string' name='[model]' role='dimension' type='nominal' />
            <column-instance column='[odometer]' derivation='None' name='[none:odometer:qk]' pivot='key' type='quantitative' />
            <column-instance column='[saledate]' derivation='None' name='[none:saledate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[trim]' derivation='None' name='[none:trim:nk]' pivot='key' type='nominal' />
            <column caption='Odometer' datatype='real' name='[odometer]' role='measure' type='quantitative' />
            <column caption='Saledate' datatype='datetime' name='[saledate]' role='dimension' type='ordinal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;ab&quot;' value='&quot;Alberta&quot;' />
                <semantic-value key='&quot;al&quot;' value='&quot;Alabama&quot;' />
                <semantic-value key='&quot;fl&quot;' value='&quot;Florida&quot;' />
                <semantic-value key='&quot;ma&quot;' value='&quot;Massachusetts&quot;' />
                <semantic-value key='&quot;ms&quot;' value='&quot;Mississippi&quot;' />
                <semantic-value key='&quot;ne&quot;' value='&quot;Nebraska&quot;' />
                <semantic-value key='&quot;ns&quot;' value='&quot;Nova Scotia&quot;' />
                <semantic-value key='&quot;on&quot;' value='&quot;Ontario&quot;' />
                <semantic-value key='&quot;pa&quot;' value='&quot;Pennsylvania&quot;' />
                <semantic-value key='&quot;qc&quot;' value='&quot;Quebec&quot;' />
                <semantic-value key='&quot;sc&quot;' value='&quot;South Carolina&quot;' />
                <semantic-value key='&quot;ut&quot;' value='&quot;Utah&quot;' />
                <semantic-value key='&quot;wa&quot;' value='&quot;Washington&quot;' />
              </semantic-values>
            </column>
            <column caption='Trim' datatype='string' name='[trim]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[Action (Drill Down Label)]'>
            <groupfilter function='level-members' level='[Calculation_2647835149958365189]' user:ui-action-filter='[Action4_B9A48DB7F43C4544A5D8D1B079CD77C1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[Action (Make)]'>
            <groupfilter function='level-members' level='[make]' user:ui-action-filter='[Action4_B9A48DB7F43C4544A5D8D1B079CD77C1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:state:nk]'>
            <groupfilter function='level-members' level='[none:state:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:state:nk]</column>
            <column>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[Action (Make)]</column>
            <column>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[Action (Drill Down Label)]</column>
            <column>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:odometer:qk]</column>
            <column>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:saledate:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='499' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[cnt:trim:qk]' />
              <color column='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[cnt:trim:qk]' />
              <text column='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:trim:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{C4937A20-C240-45C8-A04C-A09063628E99}' />
    </worksheet>
    <worksheet name='Value'>
      <table>
        <view>
          <datasources>
            <datasource caption='test (cars)' name='federated.0pggdqi0u9zo791d0fuhu1a5t7h9' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Drill down level' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='1'>
              <calculation class='tableau' formula='1' />
              <range max='4' min='1' />
            </column>
            <column caption='Drill Down Filter' datatype='string' name='[Parameter 2]' param-domain-type='any' role='measure' type='nominal' value='&quot;gmc&#10;yukon xl&#10;sle 1500&quot;'>
              <calculation class='tableau' formula='&quot;gmc&#10;yukon xl&#10;sle 1500&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0pggdqi0u9zo791d0fuhu1a5t7h9'>
            <column caption='Country' datatype='string' name='[Calculation_2529897134005563396]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='tableau' formula='[Country (group)]' />
            </column>
            <column caption='[Sellingprice]-[Mmr]' datatype='real' name='[Calculation_2647835149942874114]' role='measure' type='quantitative' user:unnamed='Sheet 7'>
              <calculation class='tableau' formula='[sellingprice]-[mmr]' />
            </column>
            <column caption='Drill Down Chart Filter' datatype='boolean' name='[Calculation_2647835149959933959]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = 1 THEN&#13;&#10;    TRUE&#13;&#10;ELSEIF [Parameters].[Parameter 1] = 2 THEN&#13;&#10;    CONTAINS([Parameters].[Parameter 2],[make])&#13;&#10;ELSEIF [Parameters].[Parameter 1] = 3 THEN&#13;&#10;    CONTAINS([Parameters].[Parameter 2],[make]+CHAR(10)+[model])&#13;&#10;ELSEIF [Parameters].[Parameter 1] = 4 THEN&#13;&#10;    CONTAINS([Parameters].[Parameter 2],[make]+CHAR(10)+[model]+CHAR(10)+[trim])&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[state]' new-bin='true'>
                <bin default-name='false' value='&quot;CAN&quot;'>
                  <value>&quot;ab&quot;</value>
                  <value>&quot;ns&quot;</value>
                  <value>&quot;on&quot;</value>
                  <value>&quot;qc&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;USA&quot;'>
                  <value>&quot;al&quot;</value>
                  <value>&quot;az&quot;</value>
                  <value>&quot;ca&quot;</value>
                  <value>&quot;co&quot;</value>
                  <value>&quot;fl&quot;</value>
                  <value>&quot;ga&quot;</value>
                  <value>&quot;hi&quot;</value>
                  <value>&quot;il&quot;</value>
                  <value>&quot;in&quot;</value>
                  <value>&quot;la&quot;</value>
                  <value>&quot;ma&quot;</value>
                  <value>&quot;md&quot;</value>
                  <value>&quot;mi&quot;</value>
                  <value>&quot;mn&quot;</value>
                  <value>&quot;mo&quot;</value>
                  <value>&quot;ms&quot;</value>
                  <value>&quot;nc&quot;</value>
                  <value>&quot;ne&quot;</value>
                  <value>&quot;nj&quot;</value>
                  <value>&quot;nm&quot;</value>
                  <value>&quot;nv&quot;</value>
                  <value>&quot;ny&quot;</value>
                  <value>&quot;oh&quot;</value>
                  <value>&quot;ok&quot;</value>
                  <value>&quot;or&quot;</value>
                  <value>&quot;pa&quot;</value>
                  <value>&quot;sc&quot;</value>
                  <value>&quot;tn&quot;</value>
                  <value>&quot;tx&quot;</value>
                  <value>&quot;ut&quot;</value>
                  <value>&quot;va&quot;</value>
                  <value>&quot;wa&quot;</value>
                  <value>&quot;wi&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Condition' datatype='real' name='[condition]' role='measure' type='quantitative' />
            <column caption='Make' datatype='string' name='[make]' role='dimension' semantic-role='' type='nominal' />
            <column caption='Mmr' datatype='real' name='[mmr]' role='measure' type='quantitative' />
            <column caption='Model' datatype='string' name='[model]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_2647835149942874114]' derivation='None' name='[none:Calculation_2647835149942874114:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2647835149959933959]' derivation='None' name='[none:Calculation_2647835149959933959:nk]' pivot='key' type='nominal' />
            <column-instance column='[condition]' derivation='None' name='[none:condition:qk]' pivot='key' type='quantitative' />
            <column-instance column='[make]' derivation='None' name='[none:make:nk]' pivot='key' type='nominal' />
            <column-instance column='[model]' derivation='None' name='[none:model:nk]' pivot='key' type='nominal' />
            <column-instance column='[odometer]' derivation='None' name='[none:odometer:qk]' pivot='key' type='quantitative' />
            <column-instance column='[saledate]' derivation='None' name='[none:saledate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[seller]' derivation='None' name='[none:seller:nk]' pivot='key' type='nominal' />
            <column-instance column='[sellingprice]' derivation='None' name='[none:sellingprice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[trim]' derivation='None' name='[none:trim:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Odometer' datatype='real' name='[odometer]' role='measure' type='quantitative' />
            <column caption='Saledate' datatype='datetime' name='[saledate]' role='dimension' type='ordinal' />
            <column caption='Seller' datatype='string' name='[seller]' role='dimension' type='nominal' />
            <column caption='Sellingprice' datatype='real' name='[sellingprice]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;ab&quot;' value='&quot;Alberta&quot;' />
                <semantic-value key='&quot;al&quot;' value='&quot;Alabama&quot;' />
                <semantic-value key='&quot;fl&quot;' value='&quot;Florida&quot;' />
                <semantic-value key='&quot;ma&quot;' value='&quot;Massachusetts&quot;' />
                <semantic-value key='&quot;ms&quot;' value='&quot;Mississippi&quot;' />
                <semantic-value key='&quot;ne&quot;' value='&quot;Nebraska&quot;' />
                <semantic-value key='&quot;ns&quot;' value='&quot;Nova Scotia&quot;' />
                <semantic-value key='&quot;on&quot;' value='&quot;Ontario&quot;' />
                <semantic-value key='&quot;pa&quot;' value='&quot;Pennsylvania&quot;' />
                <semantic-value key='&quot;qc&quot;' value='&quot;Quebec&quot;' />
                <semantic-value key='&quot;sc&quot;' value='&quot;South Carolina&quot;' />
                <semantic-value key='&quot;ut&quot;' value='&quot;Utah&quot;' />
                <semantic-value key='&quot;wa&quot;' value='&quot;Washington&quot;' />
              </semantic-values>
            </column>
            <column caption='Trim' datatype='string' name='[trim]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[Action (Country,Country (group),State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_E35A4E7F6F264536AFA93332C7CC8249]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_2529897134005563396]' />
              <groupfilter function='level-members' level='[Country (group)]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[Exclusions (Condition,Make,Model,Odometer,Saledate,Seller,State,Trim,Year)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:condition:qk]' />
                <groupfilter function='level-members' level='[none:make:nk]' />
                <groupfilter function='level-members' level='[none:model:nk]' />
                <groupfilter function='level-members' level='[none:odometer:qk]' />
                <groupfilter function='level-members' level='[none:saledate:qk]' />
                <groupfilter function='level-members' level='[none:seller:nk]' />
                <groupfilter function='level-members' level='[none:state:nk]' />
                <groupfilter function='level-members' level='[none:trim:nk]' />
                <groupfilter function='level-members' level='[none:year:qk]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:make:nk]' member='&quot;ford&quot;' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:model:nk]' member='&quot;escape&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:condition:qk]' member='37.0' />
                        <groupfilter function='crossjoin'>
                          <groupfilter function='member' level='[none:saledate:qk]' member='#2015-01-20 09:30:00#' />
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:seller:nk]' member='&quot;pat obrien chevrolet south&quot;' />
                            <groupfilter function='crossjoin'>
                              <groupfilter function='member' level='[none:state:nk]' member='&quot;oh&quot;' />
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:trim:nk]' member='&quot;xlt&quot;' />
                                <groupfilter function='crossjoin'>
                                  <groupfilter function='member' level='[none:year:qk]' member='2010' />
                                  <groupfilter function='union'>
                                    <groupfilter function='member' level='[none:odometer:qk]' member='82980.0' />
                                    <groupfilter function='member' level='[none:odometer:qk]' member='82985.0' />
                                  </groupfilter>
                                </groupfilter>
                              </groupfilter>
                            </groupfilter>
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:condition:qk]' member='43.0' />
                        <groupfilter function='crossjoin'>
                          <groupfilter function='member' level='[none:saledate:qk]' member='#2015-02-25 10:00:00#' />
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:seller:nk]' member='&quot;ford-lincoln dealer program&quot;' />
                            <groupfilter function='crossjoin'>
                              <groupfilter function='member' level='[none:state:nk]' member='&quot;mo&quot;' />
                              <groupfilter function='crossjoin'>
                                <groupfilter function='member' level='[none:trim:nk]' member='&quot;titanium&quot;' />
                                <groupfilter function='crossjoin'>
                                  <groupfilter function='member' level='[none:year:qk]' member='2014' />
                                  <groupfilter function='member' level='[none:odometer:qk]' member='27802.0' />
                                </groupfilter>
                              </groupfilter>
                            </groupfilter>
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:condition:qk]' />
                  <hierarchy name='[none:make:nk]' />
                  <hierarchy name='[none:model:nk]' />
                  <hierarchy name='[none:odometer:qk]' />
                  <hierarchy name='[none:saledate:qk]' />
                  <hierarchy name='[none:seller:nk]' />
                  <hierarchy name='[none:state:nk]' />
                  <hierarchy name='[none:trim:nk]' />
                  <hierarchy name='[none:year:qk]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:Calculation_2647835149959933959:nk]'>
            <groupfilter function='member' level='[none:Calculation_2647835149959933959:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:condition:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:Calculation_2647835149959933959:nk]</column>
            <column>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:condition:qk]</column>
            <column>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[Action (Country,Country (group),State)]</column>
            <column>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[Exclusions (Condition,Make,Model,Odometer,Saledate,Seller,State,Trim,Year)]</column>
            <column>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:odometer:qk]</column>
            <column>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:saledate:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:state:nk]' />
              <lod column='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:seller:nk]' />
              <lod column='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:make:nk]' />
              <lod column='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:model:nk]' />
              <lod column='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:trim:nk]' />
              <lod column='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:saledate:qk]' />
              <lod column='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:odometer:qk]' />
              <lod column='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:year:qk]' />
              <lod column='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:sellingprice:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'><![CDATA[<[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:year:qk]> <[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:make:nk]> <[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:model:nk]> <[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:trim:nk]>]]></run>
                <run>&#10;Sale Price:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:sellingprice:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>[Sellingprice]-[Mmr]:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:Calculation_2647835149942874114:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Condition:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:condition:qk]>]]></run>
                <run>&#10;Seller:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:seller:nk]>]]></run>
                <run>&#10;State:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:state:nk]>]]></run>
                <run>&#10;Date:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:saledate:qk]>]]></run>
                <run>&#10;Mileage:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:odometer:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:Calculation_2647835149942874114:qk]</rows>
        <cols>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:condition:qk]</cols>
      </table>
      <simple-id uuid='{56681107-0026-44C7-914A-CAC01D09E445}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <datasources>
        <datasource caption='test (cars)' name='federated.0pggdqi0u9zo791d0fuhu1a5t7h9' />
      </datasources>
      <datasource-dependencies datasource='federated.0pggdqi0u9zo791d0fuhu1a5t7h9'>
        <column-instance column='[odometer]' derivation='None' name='[none:odometer:qk]' pivot='key' type='quantitative' />
        <column-instance column='[saledate]' derivation='None' name='[none:saledate:qk]' pivot='key' type='quantitative' />
        <column caption='Odometer' datatype='real' name='[odometer]' role='measure' type='quantitative' />
        <column caption='Saledate' datatype='datetime' name='[saledate]' role='dimension' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='37' param='horz' type-v2='layout-flow' w='98828' x='586' y='1042'>
            <zone h='97916' id='31' type-v2='layout-basic' w='98828' x='586' y='1042'>
              <zone h='97916' id='21' param='horz' type-v2='layout-flow' w='49413' x='586' y='1042'>
                <zone h='97916' id='13' type-v2='layout-basic' w='49413' x='586' y='1042'>
                  <zone h='97916' id='7' param='horz' type-v2='layout-flow' w='49413' x='586' y='1042'>
                    <zone h='97916' id='5' type-v2='layout-basic' w='49413' x='586' y='1042'>
                      <zone h='48958' id='3' name='Map' w='49413' x='586' y='1042'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='48958' id='30' name='Make' w='49413' x='586' y='50000'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
              <zone h='97916' id='27' param='vert' type-v2='layout-flow' w='49415' x='49999' y='1042'>
                <zone fixed-size='670' h='88282' id='29' is-fixed='true' name='Value' w='49415' x='49999' y='1042'>
                  <layout-cache minheight='228' minwidth='195' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='9634' id='38' param='horz' type-v2='layout-flow' w='49415' x='49999' y='89324'>
                  <zone h='9634' id='39' name='Value' param='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:odometer:qk]' type-v2='filter' values='database' w='24707' x='49999' y='89324'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='9634' id='40' name='Value' param='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:saledate:qk]' type-v2='filter' values='database' w='24707' x='74706' y='89324'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1000' minheight='1000' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='46' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97916' id='45' param='vert' type-v2='layout-flow' w='98828' x='586' y='1042'>
                <zone fixed-size='280' h='48958' id='3' is-fixed='true' name='Map' w='49413' x='586' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9634' id='39' name='Value' param='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:odometer:qk]' type-v2='filter' values='database' w='24707' x='49999' y='89324'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9634' id='40' name='Value' param='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:saledate:qk]' type-v2='filter' values='database' w='24707' x='74706' y='89324'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='88282' id='29' is-fixed='true' name='Value' w='49415' x='49999' y='1042'>
                  <layout-cache minheight='228' minwidth='195' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48958' id='30' is-fixed='true' name='Make' w='49413' x='586' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{B1F370BC-36CD-4E9E-B681-1EDC5F2B9889}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='Trim'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[cnt:trim:qk]</field>
            <field>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:state:nk]</field>
            <field>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:trim:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AC074DDD-DDDF-4028-8A9E-C5CB4F3AC816}' />
    </window>
    <window class='worksheet' name='Model'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[cnt:make:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[cnt:make:qk]</field>
            <field>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:make:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7CCD1E9D-BC60-47D0-A307-FABA02A30714}' />
    </window>
    <window class='worksheet' name='Make/Model'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='112'>
            <card pane-specification-id='1' param='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:make:nk]' type='color' />
            <card pane-specification-id='2' param='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:make:nk]&#10;[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:Calculation_1480558416522571786:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:Calculation_1480558416522571786:nk]</field>
            <field>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:make:nk]</field>
            <field>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:model:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{522D3592-CEA3-4C1A-B057-F04939998C17}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Make'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Map'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Value'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{3A451AFC-0AC0-4943-B937-FC467D9B1B54}' />
    </window>
    <window class='worksheet' maximized='true' name='Value'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:saledate:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:odometer:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[attr:saledate:ok]</field>
            <field>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:Calculation_2647835149942874114:qk]</field>
            <field>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:Calculation_2647835149959933959:nk]</field>
            <field>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:condition:qk]</field>
            <field>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:make:nk]</field>
            <field>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:model:nk]</field>
            <field>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:odometer:qk]</field>
            <field>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:saledate:qk]</field>
            <field>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:seller:nk]</field>
            <field>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:sellingprice:qk]</field>
            <field>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:state:nk]</field>
            <field>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:transmission:nk]</field>
            <field>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:trim:nk]</field>
            <field>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:year:qk]</field>
            <field>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[tdy:saledate:ok]</field>
            <field>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[tdy:saledate:qk]</field>
            <field>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[yr:saledate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4D47B88F-7B1E-43CC-A5B7-F512DFE5659E}' />
    </window>
    <window class='worksheet' name='Make'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[cnt:make:qk]</field>
            <field>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:Calculation_2647835149958365189:nk]</field>
            <field>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:Calculation_2647835149959933959:nk]</field>
            <field>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:Calculation_2647835149967343624:qk]</field>
            <field>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:make:nk]</field>
            <field>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:odometer:qk]</field>
            <field>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:saledate:qk]</field>
            <field>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D50B295C-7ED1-44B6-B5BC-BABED896CFF2}' />
    </window>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[cnt:state:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[Country (group)]</field>
            <field>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[cnt:state:qk]</field>
            <field>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:Calculation_2647835149959933959:nk]</field>
            <field>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AA5DBD7E-3F2F-4498-8A58-EB195F53DA6B}' />
    </window>
    <window class='worksheet' name='Price/Date'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:Calculation_2647835149959933959:nk]</field>
            <field>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:make:nk]</field>
            <field>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:model:nk]</field>
            <field>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:state:nk]</field>
            <field>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:trim:nk]</field>
            <field>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:year:qk]</field>
            <field>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[tdy:saledate:ok]</field>
            <field>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[tdy:saledate:qk]</field>
            <field>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[yr:saledate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A284B8D2-6252-4A94-99A2-584F1951149B}' />
    </window>
    <window class='worksheet' name='Sheet 8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:condition:qk]</field>
            <field>[federated.0pggdqi0u9zo791d0fuhu1a5t7h9].[none:odometer:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A73EEB8B-D08F-4FF0-ACF8-CEA6D1330CAB}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nOy9WZBk2XmY990l8968uWftWXtVV+8rZp/BDGYIARBIQqRkgpLIkO0HK/hg
      RzjCj35xhN7s8IPtoGzREmlKFCXSQSEoQaBBYEAAnMFgpmem9+7qqu7a9y339a5+yLrZmVVZ
      a+9V+cVMVGfmzXvPvXn+c/7t/EdwHMehSZNjivi8G9CkyfOkKQBNjjVNAWhyrGkKQJNjTVMA
      mhxrmgLQ5FhTJwDZ1Vn+3ff+qvrasYr8yR/+MTnzmberSZNtWMUkN0enqq9Hb1yjaG0/7pc/
      +jH5fZ6zTgBya7M8uHOX6UQRgIfXPmJ0Ypa8CY5lMHrnFuOTswCUcinW1te5ceMmRb1BK5o0
      ecKIaohrn/4tAI7j8On1m/gkSG+scO3aNVK5EgAbK6uYwNryCjbgODYrq6sAFDIJbt66i2FV
      wl/bVKC33n+Xzz76BTgOX46t8fqZOACT92+zmsozdftjPvzsPmuTN/mXf/qfKBUz/B+//wfY
      z+ABNDneCIJEVBVI6w56eh4tNoDjOFy9+hmWZfLHf/TH1A7FP//xh+iAY1v8zd/8DaXUIn/4
      b79HMZfgD//NnwEgb72IHOjEmvsE28iCL4JcqMwGkgijd2+BU8RbmOHUOR9fff/v8OalPnKL
      M6wWodP3LB5Dk+PMe29d5OPP7hLK3OfN974D2OTTKabmlll4MEVul+/eu/YZ6UKRW3dGGb8/
      Q5EGAgBwsT/Kn/3FD7jywa8z8eGfAw4//+wWv/d7v0chOc33fjhWPdZxbObWc7yjPNH7bNKk
      IdH+i6Q/+XOyosC7UYXc/G2M1nP803/4Ff7sX/xB/cGOje2ApRfRTYhGI7z1wUW+/sow5VIJ
      D1sEwOsPE/WonLvwLh/e+Pec7gqS6ujCKwpcOd3P//Uv/m9aOyJ0tA8ART78wV9w9xcql9/+
      Or6mP6nJM0AQRHraAphaFwD+rhEKf/VH/NHMTWxUZKClox0ZeP31s/yrf/5/EolEaWnrYODS
      u1z793/CH3zxIWq4k3/yj34D4bDJcHO3/pYpZ4D3LvU9wdtr0uTZcmgBKOVSlFCJBNQn3aYm
      TZ4ZhxaAJk2OAk3NvcmxpmoEO45DsVhEkqQdDzZNk1KpVPfe1glEEIRt33Pfc4+t/Y7jOFiW
      hcfj2bOxgiBgGAaKomw7314TWW273GMbtXVre2v/bZomstzQcdbwOoIg4PM98g0bhoFhGHWf
      lctlLMtCUZRdnz1AsVjc9XOPx7Nn+xph2zblcnnfxx/2Ojuh63r1+dY+P1mW8Xq9iKK4r/5x
      GOruQpKkaueqxXEcdF3HMAx0XQce/dC2vT0EJghC9f/a125HtW272gkty0LXdfx+f905bNve
      1kFdAXAcB0mSque0LGtbW0Rx++RW247ae9iNWgEolUoEg8FqJ97re4FAYNvz9Hg8ZLNZgsEg
      iqIgiiLlchmv14ssy9Vn5N5jLbIsk06nq4Lp9/spFovV+7Ysa9tz3A+WZVEoFPb1PAC8Xu8T
      7ZCKolQHYPf3DQaD1fs/iHAelF3FWNd1LMvCMAwKhQJAXUduNOq6nUyW5WpHd38g9wGLolgn
      BDtROwK7ryVJwjRNRFHcdr7aNmxtj9veWsHc7Zq1x7nt9Pv9eDyefQlAow6sKAq2beP3+/F6
      vUClU9d2Jve5NBphBUFAkqTq9XVdJxQKkc/nMQwDVT2cQ0KSJGRZ3jYCN+JJj/4ugiCgadoT
      P+9e7HgnjuOQz+er01MttaNoLW6nlCSpruO759trhN56ja3tcTulaZp4PJ5tArLTeWqF1ePx
      YFlWnQCGQiEEQaBcLjdU8dzjDMPYU01xrxEIBBp2FFEU8fl82LZNOp1GlmUCgUD1c0mSyGaz
      KIpSFZLa7wYCgeqI7c7G7nuPQyAQIJPJNPxddV2vzjg+n2/fM8ULg+OwuryA5IsQ8XuYXVxl
      oL+HYqG0swC4+mqjB7JT53c7tWk+Sh91haH2B3LVF/dctZ3K7bBbR/7a493OW/t+o5G+EbZt
      EwwGKRaLlMvlamfM5XI73ptLuVzel+D6fL49VQRXxXNtBNu2sSyLTDbDZzMPcSybIBKKJJGx
      DXojrZwaGkaSpOr/hUIBwzDI5XIEAoE9Z9TdcNXfYrFY9+xKpRKyLCPLcnVwe9nYWJpB90Rp
      83m4d2+UwYEexiZmkUyjsQC4oz/sPNo3mhUaHbtV33Y7p/sg3dEY6lWZrSpL7UjsGo9er3fX
      H71Re1xBDIVC2LaNruvkcrlthnmjc+10j7WoqrovVUSWZcLhcPW1K9SWZSN5Pfgjlc/Kto1P
      FJlJZyjducOl8+erzy8YDOI4TlVHftyRWVEUSqVS9bnXdv6XmaW1BF6fzq25Ej5Fxh+MYi6s
      ktpY3dkN2si4dWlk4G79rPZ9SZKqumPtjGDbNpIkVWcPQRCqI2wjA7j2nIqiVGcpt/NsbctW
      W0UUxarxCZURPZ/P7yjgW+2cvWYXURQPrce6Ho/2tjZK68m6cwL4wyHGN5aqtpiLIAioqrpN
      xTwMkiTh8/mqBr/7e9V+/jLS391JrqQjSRKqBHfv3iEca6elvafxDCAIAuFwmFQqVdW5YWf1
      YOuo6Ho0TNPENM2qyqPrOqIo1rkv3U7vCsbW87rHbVWDoNJpaqfs2pHXVTFqVSr3B9V1vdr5
      awW59vq1rx3HqWt3o+OBqmryOGQyGQTF2/CzjsF+fnb3Bp6ySV9HF6dPnqx+tpdqtl9UVaVY
      LOLxeLapo408hC8DwdY4X2mNb/+gs3VnFWjrqL6bWlCLJEn4/X4SiUT1taIo1c7nGpnuiO+q
      JLqub5tqBUHY5t3ZGktw/cSWZW3z028dwcvlctVwrD2mEVuFbet7jWaBJ+HF0DQN2W7cJkmW
      CXd3UshkiYTDdUIOkE6nqwb9YREEgWg0ClTUxWw2W52pjyLbBMAwDPL5PH6/n1AoVPVUmKa5
      L/+5qqpVd5rrXnNVHL/fj6ZplEolLMtCFMWqEQeQzWYJBAJ1nb7WJtgqAG47LMuqm6ncz7PZ
      LGvJBGwR5spfqO37HkmmNx7fpkLVfk/X9V07wpMYhWVZJqxq2LuoWqnVNZxo57bO//NffMx3
      vv2rj90G95yyLOP3+ykUCtUZ4aixTQA8Hk+dcdba2gpALperGsZbcR+M1+vF5/NRLBarD8/V
      T93jtvp7HcfB7/djGAbr6+tVH3g6na7q7O5xtd9xcVUTx3GqRnG1U+SySP2d2zqmZVlVVcj9
      bGVqjkAyWR0BG3lx3Blmp1jCk+ggjuOQymUJtUd2PKa1pxvdNOquNz49iawq6Lr+RFWVJx30
      etFoOGRtNWS3GqeN1AZX9XF17XA4XNXJdws+CYKAx+PB5/PR3t5OqVQim80SDofxer11qQO1
      ban9tzsqb1WPBHa+pjutu/aJR5bRNA2fz1c1zLdGrV3c993/H8f9uJXZ+Xk8rZFdhcm2LP72
      44/rbLOp2VnSxcKORv3jsNvv97Kz7zlbkiQikQhtbW1omlbnTXE7hOuRcY3gg+B6M3p6emhp
      acHr9RIIBOryZ+oavqlWuXrw1lgCgEPjjuB+1+38siwjSpUgk5tK4Kp8ewmve/+O45DL5ba5
      VA/K+MwUvlBw13Pk0xnktgg/++IzSqUSP/n4I4L93YS6O/np3/58X5HqJhX2LQCuf1sURUKh
      EJqmVfVz130my/JjdwCv11vNA3GFoFEAaqtK5I7a7uuDtKFy/KNz1s52W50Bu7WhXC5TKBQe
      Kyr7tdffxFlL7dr+lngnPadGENsi/Ol//kvk3nYCsQgCDpcvXKz68pvszWNZbW7HC4VCeL1e
      stks8Hi6sDsiW5ZFuVxGlmV8Ph+GYTTsjK464xrVj0PtiF6bawRU1bTdcAXvcZK3vF4vb567
      SH51Y9frAHgUhZNvvoq0aZdokTDTS4tVF2+TvTlUj3GnezetwOv1VkedvTrJfhAEoWpPeL1e
      NE2rZivWBs22emweLxC0e7KcazRvbee2sziVzNlCoUChUDjUSOz1eglJ22MBe81ssseDpFRy
      pGq9dk125sAxbsuyKBaL1UxERVEQBKHqrXlSARmv11vNntR1HVVVq2nE8CjQ1cgtCocz3Lb6
      /vcSsJ06WLlcrs4CkzPTJIoFXj97fs8UibqgkyRR2vLZXt+1TAtlc0xz87iOqvH6pDhQb3Uc
      h1QqRaFQIBgMoqpq9QHXJsM9CVx3qaIo+Hw+fD4fXq+XZDJZFxtw/zaKIovCTn6ghlesfs8V
      rNpzugb+QUhnMkwVsxgtIX5x5+a2GaQWx3HqcvuNBqkYe+I4bGw8Up0eNzXiOLCvHusGldLp
      NJqm0dLS8kx8w+5KIHfFWO2iEZdaN+TW9OuDaQCPOlwjVci27QMJeLFYZCyxitZSiao6LWH+
      6vpVPr9zuy5gV4vP50MURZZWlskeIv9M8sjIQX/1HtLp9GOnSR91dn3M7rTvZl66nf5JjvR7
      UWsUa5pWzVmvNYLdttZ+x3EcbOcAI2ADYdmqQuz3vh3HYWJjFX9X+6M2iSLBznbSts0PPv8l
      HklC83jpDscYGRqqtnlyZprJXBJfOFh3vp1Ir66zMbdAz7lTiJJEtlSoxjjcVAZ39myqQ9vZ
      VQDK5XLVsH1eD89VhdzO6Oa6bF1l1iiZDSr9ej8t35o4B/Wq1UGEfmp+DiPko1FKmyCKBOId
      AFjAWirNyOZnP/7kIzxdrSg1nb8Rblssy6KwusGlgRPk17JIHpkuLVSnwpVKJUqlUsWwDoVe
      +tTmw7I8O0XKFAnJFolMjs7eYUqZ1HYBcEd9URQPvcTuaWCaZjUuUJvF2Wjk3yuAVXus++/a
      v64btPb87nNpdN1altfWSKrSvp6d4zhINW1sDYZJHUjld+iJttDV2VnnNNgaixFFEdM0qyva
      jttMYBtFEgUTxzFJFC3OnT3L3bEH5DfW620AV93Z6nN/3tSu2HLZ6qFp1EGj4TCZ1fUdz1sn
      JDWpFm4nqXW7br2m3+8nFovVvbeeSDBvlVBDu4/gtdfPG48M47ZYC9YO9kEt7r1KkkTC0qu/
      WaN8LTeJzbIs0un0jssejzLTDx9i2wYLy2vggGObCIJEtLW9XgDcdIQXaeSHR4tFHMdB07Rq
      sl4jj03tjxuNRBkOxEjNLe15DWHzfLUxhtpcIffctc/HNcwBUuk003oOXzS80yUa4jhONX8n
      GolgFEv7+o5LvpDn/vgYlmVhWRara2t1x5XL5Wp2rm3bxzJKPHTmAudOn+by+TP0xzsYHZtk
      eHiYlta27QLwIiIIQnXhtxscqxXS2k67VfWJRiK0e32kV9YanXrbddy/tZHg2vOVSiUEQaBQ
      KGCaZjUfajWxgS+6cwbnThhBH8trlc0b/H4/XutgKRwdI0OslyoClEqnGR27X2cfbVULD+xa
      PSIIokh7WxvBWBvnzp1F9Ui0tMYOHgh7XtQWR3IjxbVrYWszM90f3lWJ+rp78KwsM7ewRKy7
      a8drNLIb3Ne1GaduCojrFhZFcYe0u73xqCqjiTWCgSAiYMkH87BJkkTHqRN8dPcmQUdEaovy
      5dSDzU8d97/Kv0s671x59ZAtPZq8NAIA9SOxa6QXCoW6zM5G0VpBEIh3diGvySylM2jh0KGu
      7c4Kuq7j8XiqZVQ8Hs8BAm7b8cUiXJt8wPzkJN1nT+79hS14fSrxMyNYpkmwgZenlC/gJDLE
      uzuO7Mquw/LS1gZ1813cGIHruap1V9aO6IIg0N7WRrjsUMhkdzxnI2qj3UBV395at+dx8HS0
      oLbGCMSihz6H1KDzm4aBP6/zzbe+ymBf/wvn4HjevLQC4NoCuq5XPSK1UeGtaRLuzNAf70bK
      HC5JzRUAN8jkeld2S3Fw2/q0MA0DfXGNYLqEML9GenSCQKqIN5lHTRVoNwTeuvIKtm1TKBSq
      uVtNKrxUKlAtboBMEAQymUx1/UCpVGpYOAtq8v13CBA3CqRtvWatq9VdeFJJRDMxdQPZuz1F
      ZGuQbkcOKJSmrpNfXOXbb71LsVjENE0++uIqC8kNvjJymnhnZ/VYtwivm1XrFis47irRSysA
      8KgKmyRJ1fTs+2NjLBfzSF5vnV5umSZDsVb8mkZ7OMLyzFLV9w/gd8Tqeoba828Nlm2NDI/P
      TJMFCqUi5dF1es+crNgkNepIcnmFjZl5op0dhOMdiDt0uoN0/3K+gDeRI6z4+KvPP0FQPFjp
      HN94513W1tbI5R/FTRzHqasn5MYKIpHItnUPx42XWgCg0jEVRWFyepr5pSVmJicR4h109NTX
      gSnl80hOpXCVLMvVIFZtlelGo3Rt1bqt6dYAjuxBbm8l6DgopRILM0sYxQKapiLLErIksX77
      Pr/7O7+DLMv8zb2baO2tO9zN/kTAMi1Ki2uY0SC+WAQpmcYyTULBEB5Zpr+vftsqNwq8FVcl
      Os689ALgEovFuJPPYMYiGOnMts8FqNYPcgvrwvaF9FtxBWOnXKCIqrJgmoiShFdVifX2ABXd
      XMvmGIrGCHxnhFwuh9frpcejMTc5i39o+95q+03eXno4iRYKYq4mCJUdRlpaCAWDddUskskk
      4XC4mgZRGzdxDWHXgXBc84PgCAlASzSKceMaoiTRcWKo+v7WUdstL+7+6FuDRrvRaM2BpqpY
      uo5YsxLOsW3k1TXODA4hiCI/v3GDi/39XLxwoVIcTC+TLBRRtPrVc+I+OmIumcIol1GzHuJd
      3YTD4Wop+tpkPtu22UgkkGWZaCRSXannJsjJskw2m20KwPNuwJNClmXEUplIvKvOz/+o01b8
      +LIsUyqV6hbR74edDFnN58PayOGpEYDk4hKS18OHt25RFCVCXXG+zOWZ+OgjVktlCokEwYDC
      4LnTdUW7wh1tzIyOE+tsJ7hDVNkfCePkipzvG6qmOrhrJKoxCaGyQu8HH/2UwdZOIuFwnTvY
      rf8ZCoWaRvDzbsCTpKcnznw6yXoqhWPbCI6DLLLpXXFYCUSIRqMVr81mcSyXWmN3a6r1TqvB
      qsdaNUl4to1tmUTa4gjt7RilEsnFJSxRxigUGGpvYzoBakEnPzGDGAnhb2+t5Bn5/XSODJPZ
      SJAae0Brd5z0+gbtfT2P9lywLAKCXBXI2mIAk7MzrGRTRHx+VldWGL19m8ib2jZvmNv24zzy
      uxypJ2A7Dt0nBrEta5unxbFtzIVKzo2madW1DoIg7LqA3HGchruiuCqTLMuwuPDofVHEqtlp
      xaOqtA8NMnv1C967coVyucxcRwdFWeYr7W0EVJXR9DpKJFyNLYRbW1A1jeRGkvRGklw6UykS
      AKiGzcWTp4FHac6KomCYJtfu3kYO+FDOtiAV/Xz37/0mIyMjNNmZIyUAum2hQEM3Yy6R4kTL
      oxVabi18URTRdb262N7F7cA7LSl0hUeSJNgyO8iyh3Iuh1Kz84sWDNDR3s5fXr+Jt70dSRAo
      GgYdLS3IG6t1yWoAlmFQKpboPnMa27LoLJq0xWJAJQvVTf/o7e0lmUpybfohXWdGsNdTdNte
      hl5/55mu3HuRyaUTzC+tkiuZhBWHsmkTao1TzqSPjgDYto3p2Ozk1PP6fZRKZYLBYLVzuyvd
      9kqBaPR5rUphmyZGTS2gcFcn6ZXVqgBUEvK6yRVLeFpaECUJfXWF+5aJUC5T9AhojkMplcZY
      S6LIMvnVNYIjg0iyjF4sIYtS1RulqiqaplUrY2dzOXRDZ0D2cen9V461X78RgXCUcCaN4PFR
      LmU5d+48d++PkdtYPToCkEgmwbezT9uxHYRNQ3hrxmjD492R2LK4M/EAuUHej0+SUb1e3j97
      btua22nLYUrXkTf97CFFpS0WxZ6dQ1YUlI5OLNvm5swEPedPUcxkmfziBrHhQcpeGWVkCN/m
      whpF8zH3YBqoCHo8Hq8rShDv6uK7nZ3Njr8DicUZCmKAU8Nt3Ll1k3w2iUcN0NLuPToCoPl8
      5JKpHVWWcrFESFDIZrN1I7ubNtFoEZCbcFfy+whtGqrwyCNUAnKGQWZmmrNDw3V2Ql88zoNP
      PuGBbiMIIlJrlHJ3N4L8SD3LzM3SHtDQVlNkl1YIxmL4wiEEoaK6FHM5VL+fQiZLwiqTTq1j
      FYoMDQ0RjdR7iZqdf2eUQBhzaZWZeZMzZ04zu7jKyaHe3TfJe9lQVZXr1+Z5uP5oM2mfU+Tt
      X7mEsGkTJEUdlpYqHTmzQUdPvOKFTGR5Nbz3Si53zQHUrD8GVksFhkqlut0eTdPEGwjh1yII
      ksTM2hLmnZuIls3G3Ay6pKLmMoTUOAuGw09mNijIfph7UHfNN4fCtLVGeGvgBABj+Rn++kd/
      zT/87m83O/0+8YeinAo9yrId7O8FQNN8R0cAABzJi+15ZPg5joO/pWVbgMlxHBAMwm0tlZVU
      xTLXJsbIJlKooXpBsGyL9VyWxEaCQDBAtKtjm23gCWgUNrdqcmeUZDrDrEd7tNmz4xAa6CUE
      GOUyntZeHMfhoeMgiCKCLGNqW4TQtphZz7PxcAL1xDCD/X38/b/77W05S00Oz5ERAMMwSObL
      wP4DO24HjvRUVomt5bNo3Z11x0iCQHzz2MU7d8D1qQtUa65Ypsl/vPspkf5BECo5Q9lEEqW7
      v+F17U01TRAEHMAyDawGSyEFQcRB4OzJU3z77/xKVe+PRA6+9LJJY46MACiKwm++dZp/9bMH
      ex8M+069rA0i9QUjdIdidVHXcrmM7NMYPHeO2xZ4N/cX0HUds1REVn3bzuVs2QrWm9zgO2d6
      GZ2YxDZ0dI+M6PGQX1oieOk1Xr904Ujv0vI8OTICADDS341XuI/uVGYB3fGQWFqltbfBDoGH
      QBIlWlpaKJfLRKPROptA0zTu3boDmwIQ6uhg6e5dxP4TFRXMtipGtW4QkyQKGyukTBvFsfnW
      +dMoikJHNMRkuUwykyY5OcW5UyO8e+kUffGd1zE3eTyOlAAM9ffy228M8h9+9iVlJYYpKnzy
      6Qxv2g7t/d2PfX6f5kNRlLoU4t0qRvtbWjD0MoIoIhUypOYWiIgy773yWnVtcT6fR1EUllZX
      GdXL+GJRgqrC+r1RlpaWUJ7gssujxM3PP2ZibvXRG7bFW3/nO3RFDlbS50gJAMC333+Ln3xx
      j2VLBsfBFBV+eXWe1y2brqHe6nF6qbRtbbBeKqO7dXmEmj+bKpBe1ikWi9sCY+5r27Hr1piG
      OjtZGRvDEST+3iuv4fdr1cQ127axHYexhQWU1VXWbRtfexsAXk3Do2lcGhmhq6s5+jdCi3Xx
      nUuvguTFI4nY2WWmCgcvBHzkBMDr9fJbv/Iav/+j0UcJY6KHz75c5HKhyMD5k+A4ZHMlhPX6
      dQOFfInWfKaale/uMebYDqPXbqH4NW5OPiQSC9O+aTjXFh/NJzbQanL6bRwkAUZCPq5PzyBI
      UrUAF47D0toq5ua2U6LHgzM9u1nGxMHR/E900f1RY2R4mKWH1/l0qsSvv/8qUqCD4eDB3cJH
      TgAALp09SfyX4yzmHuXI26KH66MpDP0e0aCH1r5etFB9eRQjn6e9gb1gWRar4+tk/ZWVXKfN
      NKc7O6qfuzPAuZLF+aFHyWera2v8MJ1lPlbvWQKw9DIFxY/tCPjb4zi16xYAK5lheXmlYSZn
      kwqSGsLJTvH973+f977xa7QGD7667UhmS4VDIf6H734N2dbr1BVHlLk9kWd+amlb598VZ+e9
      BurPX7+GOJPNYlsm+ZlJctMPKcxOkZ16yPrDByxc+xKzXMIvWhiL05QSG9jutqe2jb26TH9f
      77Gs4rZf8skVljYqi3oO+5SO5AwAEO/s4BvnOrgzu8F81sHeTC9AlFhISxQz2WquzZ44NeqQ
      47BSsHl47wHtna0EIo8Wmzj2o3XFlm2TcHTeevcr5NMZbN0g2t5KYnmVn8+VEE/2UEos8ZXT
      Q8gemWwiycb6GjklTJdZ5Dt//zcYHBhojv674POIJFJZYgHvQQtqVDmyAiDLMr/67qt8R5L5
      4tZd/tO1OdYKFY9N0CeiBgMNvrXDmoAt7ye8EX624SDNzaGaD1C8MnndZkixOd3TjyzLzMzO
      4OtoAaBcLFbTJLRgALG0Dj6NcqSDO/emuHRphFBrC6rPRzivc/H0a4QOMkMdU/L5PO9+49d5
      51x3w6Jg++FIqkAuHR0dBIMBXrl4lt957wweI0vAzhLz7aRXNx5tnQYqkCMImP4I+UgXCa2N
      UridMcPLZ+P3+GJqnIcri9jW5n5fxTKezXpBiubDt1mYSBBF1pQYk+NTZNc36JFV3nmt2fn3
      S7BjgMTkNb7//e+TyO1enMzFMspMzczh4FAoFI/uDOCiKAptikJLLMbJgUrFhlQqxeTqCuu6
      jq+9va6YVSGbo5DJsraeoryZVmGbJgbS3vq4KOLrqKhFRduqkSenmk4tCAIBj4ibsidIEnPL
      ab51+gxDAwNP7saPOE52gf/xn/2vvP3VrxIJ7H9r3nv3Rhkc6GFsYhbJNI6+ALiIokgwGCSd
      TtPb28vw8DDJZJKHk5OsJxJYtk3IspHWMnxlYJBFT4J/c3eeglernKCRxrQFyxdifnGd05Ew
      lmGQ3UhiWza2ZVPKF8il0gDk8wXQHn3vYm93s/MfECHYzT//3/4XPv/sU764fgt9n2XlBVnG
      H4xiLqySOkoLYvaDWwrQNE18vkpUd6Cvj4EGx/Z3dfBPZYl/eX2SgrqzsVznphTF6vLIjsF+
      8qkMs7dHCQcCPLx6k6m5DAsbeQzBg6osISgKQjlH4N2vPPmbPeI4xSR/9K//HM0f4L1v/Cpt
      wf3FTFQJ7t69Q7itG0U6Qgti9oMoitU9xtydXmp3c99aBrGzrZU3Yov8NGPQ6RQ5HdH4ZVKn
      7NW2nVsuF+gwc/S0tVFaXCWdzxHqbCcgefiH3/5O9Zzr6+v84KefceFkH7//Hz4hXdaYnlvY
      dr4mu2MiceXKZQD0fJpiyQDVg0fa3aw9cfr8oxedrQjO5q/uOA66rh/5UnnufVIu7jkAACAA
      SURBVGYyGUKhEKVSqZresLXup3v8vckZIsEA3e2t3HwwyZ/N50GSNyO6NlImwdu9bfzuB29V
      o7eJZJKVtTUEHPr7+vCp2/XUu6Nj/E//z0/wCDb/83/79+jr214t7rhSO7OWy+Vt/fJvPvwh
      WuBRWridXcZ38gOu9B9si6pjNQNAZXR3qyqUy+XqtqtbZ4LaQlLnhgeq378wPMDVxWtMbj66
      0NoM/837r3P+3Lm668SiUWLR3Wv9e2QJCQvdkZmeX24KQA1bK3Fv5a23v0qpbJBJriH4ogTV
      UwT2G9ep4Ui7QXfCXTdcLBYplyuVIva7F7IkSfz25ZOIxRzoJV7vim7r/PulpztO2CfjCBIf
      35pqRn23sFvlap8WIBqNUthYoISvUhd1D/WnEcduBoBKXZ1YLEapVCKbzVY3kbZtu04dqt0e
      tXZ2CIdDXAlKXMvoRLpbDt0OTdP4R1+/yD//z7eZX8tgmmZz4cs++finf81qcnNL2LkfcVvP
      c/GDv89Ixz7cdTUcSwGAR1vCujupa5qGz+drWEp8a9EqgN/+6qt8M53G85g209feeZO7Uyts
      ZIrNUoUH4MTZy7zT3s7Ug1HwhujtCJDQDz54HDsjeCvZbJZyuUxLS0u1TGIikajurbubWiTL
      cvV7h8UwDBYWFvD7/bS1tVUX1R/3orW1NDKCAcav/oirD9ZJZ9J88Jv/FWe7tnvn9uLYDzmB
      QACv10s2myUYDFY3z1hfX8e2bVZWVirR20CgKiBerxfbttG0gz/wrXg8HgZqgmBu4a4mFXbb
      fy0+dIbSl39J0dLob91/NLiWYy8A7g4ztXuKybJMJBIhmUxW639mMplqkVx3Y76t1eAOguM4
      GIZRXR0mimL1fM0M0EcUi8WGRcsANlYWefNXfwdr4TrJgoE/fPAFRAcWgLn5ORRFpb2t7cAX
      e5HZ+pDd+pttbW3VTlm7lZIoiodWF909u9z9CorFIoZhVAVMVdWmPQCUSqUdK/0B+DSNv/iP
      /y+Cnue/vPT+oa5xoKfsOA6dHZ2Iosi169cJBYP09PTsKKEvO6qqks/n6yLE1RVmto1hGNW9
      ihvh2lWmaWJZFqqqVgNlmqZVR/5IJFKt9V8oFEilUlXV7LhWeHYch6WlJQD8m5U2almbn2Sj
      JDMQbwOxA2yLwyg0j2UEr6+vM3r/PlcuX64rC3hUKBaLVTWoNjAGjzxDqqpWg2lbcTuz+71Y
      LLbn83Vdsfl8vloJ2u/3Hzu1yLIsisUiuq7j9/u3PTdDL7EyN0nZ10lfWxBJlhEP8Ywea3hp
      bW2lu7ubD298TqFY3PsLLxm1gZjaDbdrYwTuj7QVd0BxURRlX4vc3U4fDocJBoPVH75UKrG2
      tkY6na6blY4qkiTt6mTweFVk0eKP/sXv873vfY+N7P7WA2zlsRXNeFcXHq8XzXc4K/xFRlEU
      2traSKfTlGvq/29NmnNrdbod3LIsDMOguDkouGrSfkZxV7hcg7h2G6R0Oo3f76/b1KPWXXrc
      Zon2nhO888o5fG2DtIZ2nlndDTIcyUtYgUQmR2fvMKVMqhkH2A+2baPrOqVSqW7D6VqXpSiK
      1e1XLcvCNE3S6TS2baMoCr29vft6tq4KJEkSqqpWS7TX7u6oqmrdzKTrOrIsV/c8dg3qo0Am
      k9lWjMzl3i9+wJLvLPr4jxn84J9wumPnQbiUTzM6sYBHsjl35jR3xx6Q31g/nrlAB6VWLYlG
      oyiKsi09wrZtyuUyuq5jWRaZTKaqv/t8vn3X+BFFEb/fX3UsuMl7brqGpmlV1UwQhGrbameY
      o9L5t6qRW4l19fHw2s+YT+pc/cl/Yi1TrvvccRxmJh+QWFvm7uQyly+crRQ4sE0EQSLa2t4U
      gIPgbjEai8Voa2urBs7cTlirkgiCUM0rcjezsyyr+v/T1uGPgo2QSCSqToRGGKUCJiL5QpFs
      Nouq1gu+IAj0D41gmSaaF2YXluiPdzA6Nsnw8DAtrW3NQNhhcINlgUCgzkUnCAKaprGysoLH
      4yEYDGLbNul0ui7F2nEcvF4vqqo+Ne/Zy2APbLWltn4mSdKuBQL0Uh4t0oVQWgVVYHa9yLn4
      dpdpW1cPbTUVJs/FKjEstTXWFIDHZeuPJ4oisViMdDqNZVkkk0m8Xm91X+JisUixWMTr9TI4
      OPicWv1isJeQ7hYEAxi68gG2ehvz0gjx1giByPbOvxdNAXgKuN4j0zTx+/2USiXy+Ty5XA6/
      31917x3XINd+cBcprayscOHChYbHjH321/zg+gqDHUHavvFrSIeY9OoEwLKsOndfk8fH9WC4
      a5FrbQTTNDE3yyE22U4oFMLn8+04UPiDIfTiJIahPn5lOFd/bfL0aD7fg7Gb23htfpKcGOXU
      QKXw8GFNnmocoEmTlwlDL+EIMsJm2crDpkI0bYAmLyWJlTl+9sm16utf+fZv0rZLNHgnmlZY
      k2NNUwCavJR09I7wW7/56yiSQ1d3P5p2uN10mgLQ5KXl3tWfEGrt4saNL5hePVw2cp0AZFdn
      +Xff+6vqa8cq8id/+MfkGnjqViducnNi5VAXbdLkSXD2ja+TXlsg3n+a04dYEA9bBCC3NsuD
      O3eZTlSk6eG1jxidmCVvgmMZjN65xfjkLADlfJp0rozjOMzNzQGQWl/mzr1x7KZfqclTxjEy
      fP9HnxJQJOYm7pIpHXyHSGigAr31/rt89tEvwHH4cmyN189UNo2bvH+b1VSeqdsf8+Fn96vH
      f/nRD5ldL7I2fYc///5PSa3O8Kd/8YND3laTJvvELPPw4Rh3ZjN8ZSjKUmr3AK5RypPM5Pfe
      IEMOdGLNfYJtZMEXQS5UZgNJhNG7t8Ap4i3McOqcyv/3vX/NxVe+yj9+7yR/9e/+JcWSw73x
      LBOLG/DdX3s6N96kCTC3UeZ3f+tXCbTEyW6s0R4qMJcQ6I01WBPgODx4OIktyczr5b03yLjY
      H+XP/uIHXPng15n48M8Bh59/dovf+73fo5Cc5ns/HAMEvvWd3+bBF39DIv8OkWiEb37tG5zt
      jlAqlZ7u3Tc59mwsTrO8kQVGAXDMMhfe+VbdMY7jMDv1EEmSiXb0kFhfhi0bZNRFgjembzOr
      t3F5MMD//gf/nv/+v/unfPqjH3D6/V9j7tpP+fjGA1o7IkRCA1weUFiik7NdCv/xr3/Bb/7q
      +/zpn/xbSpZAa88w/8Wvff2ZPpAmTXYiub7CylqC2eU1hrpilAyLcFs3pXSqmQrR5HjTjAM0
      OdY0BaDJsaYpAE2ONU0BaHKs2eYG/cuf32RxPfM82vJY9Pa1s/6CLQQfbg2iO/ZTv47fI+OV
      wThECD7k9ZDRjb0P3ELA46FkmdgH8KEEvV5yxsEquJ2Kxggph0t02w8NBOAWX96fe2oXfFq8
      /e4FRsUXSwC+ebqbvH3wznVQ2jUVvypQNA+eDtAd8LOQyx/4ex2aRrpcwjyAAMQDfpbyB7tW
      3B94qgLQVIGaHGt2FACvLDHc07rjF4Nas4TiftGLRax9LH4v5bLPoDVNatlRAP7BB5eRJYmO
      WJDutjCa6qU9GkT1ypwd7OQrp3qfZTv3jVcS6Yv4adEU4iENWRQ42x7BK4kMxYLEfAotmsJw
      LIgsCvSE/bT7n+7+BunlRZbHRsknE5QLeVYejmNbFsnFBRLzsziOw/L4feZu3SC7tsrq5MOX
      qrLb0sQEhq4zd38Ux3FYnZ0hl0yST6eZuXtnz/o+z5Md1wQ/nF/j4dwab10YRDdN4m0RZEmk
      VDaYXFwnqL2Ym2K0+VV8Hpk2vw/DsgkpHkRBQPPIDMWCXJ1bI+D1cLotgkcSUWQJWRRZzT+9
      /CXHtlH8ftYmH2LqZdoGT7Bw9zblfA6PolJIpYj29FLKZjF1ncV7t/FHovhjh9+C9VmSWFxk
      Y3GBnpOnGP3lJyg+jbXZORzHZvjyFR5++QWnXn/jeTezIXvaAK5jxbEdbj5YQJJEbNtB9b6Y
      6+kdB5KFMpZd8b4sZgrkdYOBaIBbywmuxFsYagkylcwiiyIbNcc+LQRRRIvGEKX6Z+aPtSDK
      MpZpVOoE6WXWpiZo6RvAfoFHzUbkU2kWHj7Aq/qYu38f27bweCtqsvQCb/e0Y8vGZlawbJvx
      2VVkSSSZLVLSDb68P8vZwS5uPJh/lu3cN+uFEo4DBcPEAXTLxueRubOSZCAa5PriBqos4ZVE
      kkUd07ZJFZ9uMbBwZxzJ46H9xAiCKJJaXKD73AWMcgnHdvD6fKxOjBM/ex6jVMIydHzhyFNt
      05PCcRxsx+bKN7/B/P379J09RzAWQ/LIrExNsTIzzfDlK8+7mTuyowBkC5VOsZLYbpjdnVx6
      ei16THSrMpob+qNR/d5qpcLww41KfCNTrndNlq2nOwN4NzcPkQJBADpOnARA0R7Vsuw8eaby
      j/BTbcoTp5BJM3jhIl5FZejSZQA6Nrd91UJhfJvbyz5PHMdiYnwcLdpOQLaYW1pn6OQpCun0
      86kLpHo9lA4RfGny4uHfZabSgsFn2JKdmZ94gCF68GsaM9MPOXd6hNEHE3iEPWyAf/D+pV1P
      /MrpPl4/18+ZgY7qe9Hg7ouTL4908+23zxLUVC6f7OHMZmm7ga4Yb54fAMDrkfjWG2c42dfO
      6f4OXj/XT2skgCQKfPfre0+nFzqi9Ed2Ljvu98p8bbCTt/vbcWNnQcXD04yjTV/7nOTizmpj
      LrHB+C9+zsSnv8DZtEkK6VT13y8yhUyG6x/++IXzXLkbZKyncsR7+5gcv48oiAiijINFcn15
      5xmgtyPC7EqS7rYIg/EYyxtZVEWmNRzAI0v8+Op9BAGu3Z/jnYtDXDnVyxejs4T8KuJmTzJN
      C01VWEvlcByH8dlVVMVDJl8iWyhxZ2KRc0NdSKJIvDVcnSo1xVs1voOagoCAbdtcHOkmsw9v
      jSSJtPoVVFliNV9kOBZCkSU8ksjt5QSmbTObytPqV/nqQGfFcC6WWS+UGGkJMZfOMxQLols2
      c6k8C5k85mOs9HdsG0EUSS8vkU8kaOnrZ+XBGOVCHrNcZuj1t7EMg/bBE2zMTjP20c+QPDJq
      IIS/pYWNmWkiXXHWZ6aQvQqRrjgtfQOINfuDPU+WJyfRQiH0YpGpW7cQJRGv6qOYz+HYDmff
      fvu5tMvdICPemWb0wThaKEpIcbh77x5dfScoBkI7zwBD8VYE4ERvK4WyQXssgCSK/PLOFMls
      ZZ+soKZw4UScT25PMTazyvjsKgCiIHD17gytkQBl3cDeNKYBrt6bQddNXjvTV73W6YEOPJ5K
      4E0UBLLFMj/8dJSulhDXx+f5/N4Ml0/20NcRo6ctQusudeAjqpc2TaUzqDGXznMl3sJavkRe
      N3iwnt4UMoGTbWFmklnSJZ2Pp5exHYeoqnBnJUmmZKDIErplM5vKPVbnB8iurVJIJkmvLNHa
      P8Dk1V8S7orjC0VoGzoBOIDD4v17tJ84iRaJcOLNryKIAoVkgt6Ll5EVBds0kb1eWgeGXpjO
      D5BYWsIo6yxNTiCIAo4D5WKR02+8iex9/ts1ebQwFy+c59SJAbp6Bzl//iItIY2e3u6dZ4CJ
      hXXmV1P0dURZTWYZjLfwcH6dV073EgtV1JyxmVUW19MAj/6upbEdh9fO9nFtbI7h7jayhTIn
      +9oZn13lVF8H8bYwP/x0lPPDcSIBH1fvzXBvcomejijvXTnB9fE5TvV3sLieoac9QkcsxI3x
      eRKZAn2dUdZTO+eTeCWRn04uosoysiiwmisxm8rhkUKcbY9ybXGdkmny2ewqqZJe2esLWMuX
      SJV0zrVHWc4WmE/nsWyH/miA+fRjzgCOw6n3PqCYSSOIIuHOLiKdcUrZLMtjowTb2lH8QYZe
      ewM1GMI2TRAEQu0daJEo83duEevpI9jWjqyorE9N0tL/YswAtmUxePEiLd3drM7OEmppAUHA
      41UY//xz9Bd8+9xtSyL/63/2Jzsmw/lVL+eGuljayDC3kjz0RTXVS6F0uH1dd2KvZLiTrWF8
      HolbSwmelaa6VzLc4uhdLNOg5/ylx/KUvIjJcKmVFZanp+g5eYpANAocLhnuN4aH6Q4+vU3Y
      D+QFypd0rt6beeyLPunOvxVFFimb9cbj+OYM9bwwSkVkRa3r6PEz555ji54ukY4OIh0dex/4
      nNlRAC6ciKMpXsZnV0hmK9PY2YFOppcTFEo6r57p44vRSpU41SvzxvkBdMPizsQil0Z6mF7a
      YH41RSykcflkDw/n14iFNGRJYnJhncF4Cz3tUT78/D754pMTiIjq5WuDndxdTZEq6Zxtj/C3
      U8ucag3jkUTubM5cZ9ojtPtV5jN5IqqCVxJZzBToCPpYy5WYSj65xLTs2ioPP/0FPecv4vVp
      rE484MTb7zL95VUsw2DotTcRJInpL69ilEv0X36Vyc9/Say7F68/QHp5Ea+mET99dAXmebGj
      ERz2+8gXy+SKOt9+6yx/980zCIKA4pX51htn6O2I0t0Wxu/z0hYNsriWRlO9vHFugLJhongq
      shUNaRimheOApirIkkjZMPny/hypbOGJdn4AjyQiigLL2QLr+RKZzdlmfD1dt4HC6GqKsmkz
      lchxc6kSHe4OadxY3KDvEJut7Yap64BDuKOLcGcXit+PWS4jyjKReDeZtVVs08QyDGI9fSw/
      eFR5LxrvJtrdi/GC69IvKzsKwC9uTrCWyvHu5WFmlxNsZPLIskgk4GNsdoW5lSQLa2nyRb1q
      DwQ1hULZ4Mb4PN3tlQDJzFKCj25MMBRv4erdab68P8elE930dUYfy47YifV8iXurKV7vbdv1
      uKDXQ8EwkQSB9wa7+Hhmhavza5xsDWM9YX92uCtOx4lTTFz9pPqeIInYloVlGEgeTyVVYniE
      9ekpQm0dnP7a18klNlibmiS9skTf5VeeaJuaVNhRBToz2ElQU/nszjQjfe0UijqryRzpfJFL
      I90ICHS3hUnlihTLBpGgjxvj8yyspXnldC8zSwl+5dWT3J5YZDDewuTiBkPdrcRCGjcfLNAW
      DTC5uPHEbyioeDjTFuHuSpLOgI+A4qEvEkDzSIQUDydbw9iOQ143uLeaxOeRKegmp1rDLGcL
      eGWRG0+4XcVUkuXxUXouXCa5ME8plyOzsoIWCmMUi5Q9HvRCHr1YJNjWjhaJMHP9CwItrViG
      jmPbJOfniPX27X2xJgfiQF6gF5laL5DPI1E0nn82Za0XqFzI4/VpTyUv5kX0AjXipfcCvSy8
      CJ1/K7WJb01eHI6cAHhEkQudUXK6Wef6HG4JMrGRRZUlWjSFhUwlmt0fCRD1KUwkMgxGgzg4
      3F1JYjvQG/bjAIlCmdNtYXK6Qaqo0xsJMJPMsV5oFgF+2TlyAhAPaRSMSucfaQkR9SlMJ7ME
      vB5GWkK0+lWSxTLDsSATiSwnWkLMp/PkdbO6YswN+uZ0k+6Qxnw6z63lBO/0d9CiqRQMk+Q+
      1hAEvR7a1ae/ci6qKiT1g6sxTY6gAMykcvRHArw32EleN/liYZ0r8RZM2yageLi1nKArqDGx
      uc7hJxOLRH1eLnZG+ct7M1zqilE0TZJFnWxZByppHydawhiWzS9nV1Ekkdd72/jlZn7TTpQt
      k0Lp6S62ARAEG16sijAvDUdOACKql1a/QrqkU9BNXu1uZTqZJah6UCSJs+0RVnOl6gxwqjVM
      WPUyn6kkzqmyhN/rQfPIRH2VhfWpko7mkShbNgPRAC2aytJmQmCTF5/sxgqzq0m8ig+/bJHI
      5OjsHaaUSR09AUiVdL5c2O7G3GnR+1iNnbC4aRdoHpmCYbKQKVQjx/PpRyrGdDL3JJvc5ClT
      LpWwHJtiqUzZ0Tl39ix3xx6Q31g/egLwJCgYe9fwOQiJxQW0UAg1sL8VUhvz8wRi0arnKJdM
      4o9EdnWhdvn9h1ra2aapHEZ/iqkKmkfGOkDpx1afj4N6gb2PkfHq7hCTyRUZHDnNxNgooizh
      2CaCIBFtbW8KwLOgnM+z/PAB/kgUBIFYV5zk8hKx7m4SCwtYpoFlGEQ6u8isrZJaXuLEa28w
      PzqKommIklTNqNyJtF6kdIhKEim9sSrXHQiQMXZOv1grV2ybmOqjYJZ3jJ7HFB+pcgkbh7Wy
      vk3WWlWN9dIu6qRw+BVx7oKYUj7N1PQELR1dRBSB0bFJhk+eIv+81gQfN0RJov/iJVYmJxEE
      gaWH40Q6uzB1g0ImjVf1MXjlFaZvXkfyeOgaOUUxm8W2TBKLCwSised9Cy81qj/MmTOPqg2c
      i1XSZNTWWLM26LPAo6pIsowaCNJ18iSFVIpANMbywwdYuo66WTnBH46iF4tsLMxXCjI5Dr5g
      EDXw9CKhx53mDPAMiMW7AYifDLI4PsbgV15BC4c5/c5X647rPHGCzhMnqq87BoeeaTuPI00B
      eMbET5563k1oUsOREYD2kI/e3p2rWT8P4mGNuc2Kz9n1ddRAAM8OkWGjXGb+3l2i8e7qSqp8
      OoUvGEIUm5rq0+LICEC2bDC5nnrezagj4nv0eBfGRvEFQwRbWoh0dpFcWkQvlcgnE/RfvEw+
      mSDc3s7yw3GMcolcIkGkowOv6mPq9i1aenpJLi3ij0SwbZv2gYFttUabHJzm0PIM0ItFUisr
      rExN4jiw9GCcfDJJMZMhEI1hlEo4wPzoXURZZm1mms6hYTJrayzcHyV+6jSWZZJcWmTqxjU6
      hoabnf8JceQEwDZNjMLeiWHlbOaZVTJbm5nm0je+RXzkJGrAz9T1a3QMnyCfTLD4YByouMd7
      zpzn5Btv4QsEqp6fYEsr0zevY5bLlXXBp86wMjmBbT3ZYN1x5cgNI5nFOdbu3aL37a+RnHpI
      oCOOY9uo4QhGIU92aR5/WwdLNz6n5eRZPD6Nwvoa7WcvIj6lMt7dpyuFb3vOVha1f/Uf/y5A
      RRVaXsKjKmjhR37qwSuV5Y/9FyulKVt6egDoGBp+Ku07zhy5GcAXjREdGiEzP0vbmQtkl+Yp
      bKySmBgjt7pEy8gZssuLBDrixAZHKKdT6LkMudXlZ97W3nPnufj1b+BRXszNRo4DR04AZFWj
      lErii7Wycvs6SjBEbHCEUjpFpHeQ1Xu38PoDaK3tJCbGsC0TSVGQvE9vJ8ImLy5HTgWSPB56
      Xn8HgGBnHIDExDgd5y+jhMJ0v/Lm82xekxeMIycAjYgNn3zeTXjqdPr96E9wW6WQ4t01Ge6o
      cCQFoJROInkVPL7GexXYpsn6+F201nYC7V1AxSvk0fxPtOBswOshqj191SqseFkt5A+VDboT
      4gu26fjT4kgKQGLyAZLXi7+1A62ljfz6CpZhUEpu0DJyBsvQ8QZCZBbmsHSdciaNv7VSeXll
      9Bb+tk6KiXU8mh9BFAl0diN5Dl7mO2+YZJ/y/mMABVPF3zRhDsWREwDLMMitLCIIAsGuHhJT
      D7ANA9uy8Ld1YBTyiB4PiYlx1HCE3MoiLSdOk1tZophKEOrpBwfS8zPYpsHIt34D4SVKRShk
      Mmih0GOfRxZF2naYQWsJeRV8soS9Q0wl5FWQRXHHz8N7eMA84tMtAX/kBCC7OEffW1+jmEoA
      sDE+yuD732T59jVK6STtZy4AFbsg0jfI6t2bKMEwuZUl1EiM9fF7hLp68QaC+GKtZBZmDz0D
      uOjFIpJHRpKf/mYRs2NjDF+8yOLkJJ0DAziOg6nriKKIR1GwLYul6Wla43ECkZ3397Jtm5y9
      d9mXrXZCVPGRM8vVDp+u+bxF0dgo1y9+cT9vUTWS5e02h+k83RpP2wTg4lcv4Dv18pXgi3eE
      WUukiPRXUojVcGUF1alf+wcABNo6yK0s4dH8eHwaaqjy47efqwSbWk+erRzXXtmzLNzb/8Ta
      llhcoJBO0TVyCtsySa2soGp+lEDF5rAtG9XvRy8W6wJih2X0s8/oHhlhcWKSlZkZuk+cIJ9J
      09rdzdrcHMVsjrbN4NpxZ5sAjK+luT6//jza8lj491CCY8OniA0/n1Rkx7YJt3cwdeMaONDa
      20s+nSK5vIhjOzi2jS8UwrJMBi5efuzr5VJpFh4+pKWzC0mWMA0d27TIJpIoPo323l7Gv/yS
      Kx988ATu7uXm5VFu94njOCzd+JzC+hqO41BIVIS5mEqSnHpQzf8pZzNsPBzDcRzSc9MUNtYw
      yyXW7t9+4qXIhU31Q0BADfjxahr+SARRkvCoKrKisDI5QUv88UflvlOnePWb30ALhoi0t3Hp
      /fdpjceJDw/jVVXiw0NkEglOv/baE7izl589bYCukMZSZv81cFr9KqnNHdgBQqq3WqP/WZCe
      ncLUy4geD8XEOqujt+h/51cwCnkEUSK7OEcw3ks5m0YJBln44peo4QiZxXnazpwnNnSKxWuf
      0vvme0+sTbF4N8sPHzD82mtYholHUXAcGy0c2RyhDVp6egjEHn/tr2sAn7j8aItbr6IAEGmv
      rIUdPH/+sa9zVNhRALrDfjqCGj6vRDzsZyaRpTWgIiCQKxvMpXJ0h/0EVQ9l0yaoeKqBmKJh
      crGjhfVckTf6O7i1uMHY6rPJ1Q/19LHx8D7puSk6zl/BF2lBEAQEUSS3ukT3K28hCAKyorLx
      YJT2s5dYvP4Zgijh1fwsXv8cb/DxvSi1eH0++i5crLyocXq4OUBeHxB6ybaIPyLsqAL1RPxc
      m1+jqJtcm1tjsCXE5e5WLsZjhFQvw60hVI/MQCxIslCibFr4vR48okhvNEB7QOUrvW0spPPP
      rPMD6LksllHx7edWl0lOPyQ9N838Zx/h8fkpZVJkFueY/eRneAMhCok1JK+K49hkFufxqD7M
      UrPo7XFhxxnAAa70tFa3EbVsm9VckVShzNhqkt959ST/9vNxgoqHgm7SFw3gAAupPMlCma6Q
      n+lEElWWOdsZ5d7yk98NphFqOErnxVcIdnYjiCKnf/23AAj3DgAVW0CLtXH6O9+tfic6cKLR
      qZ4oD7+4SrQzXk1t3kp2Y4O5u7cRZZlTb76NIIrNJZHPgB0F4OpMfeHXYDp9owAAC+pJREFU
      a1s8Q//m6hgANxYq7/94bL7u85Xs/9/emT23cd8H/LMAdhcLYHGfPMBLpChStkRJlWM5csZN
      42SadqbNpI37kGQmL+6/1M50kj76wQ/NNK3rTBPHGttRZCmSKN6ieBPEQdzEtQA2DwtSpKjD
      tEGZlvCZ4QEsF9zd+X1/v9/33mjLBX4ZnF29TzymuJ9eYOo40JtNBMFEJrZJMb1NoK+fzflZ
      KjtGp/iR16/Q0GqEh06RWFnm3ke/wyKKWFsplMnlJTxd3SSWlxBlGU+k69hTIs0mE37p2Y6w
      R1ElmWL9+L3f7eKFc4SdRHKJBDuZNLVymfHvvMXcZ5/QO/4K+WQCq6qCbqy4a9NTDJy/QGp9
      lYFzE6zem6SYSdN//gKlXNboFK+qhAaHDpVJDLU5GM4mWoiX80c+r9391Y6br0UA3IpEts3d
      IU8yuq5z9q3vUsoZneLdkQjeri7KhTwbszO4giEUh8NIh3Q6adQ1EARcoRB2t4fVyTv4eqM4
      g0FE2Ur8weKhFSBZLlFtowBYzC95MJxZEPjFt0b5jz/O4JBFdmp1JLOZiNNGWasTy5d4cyhC
      qVYHAeYTOWySBdFkIl4ocSrgYi6RZSTgYjaexWOTSZeqfHswjMdm5aOFDQb9TiwmEwvJLKeD
      btyKzG/n1nErEpeiQWr1BrOJLJejQf57aoXxiJegQ2EqliZRPGird8oSbqdy7A/sKLhkiUK9
      iidiRJzumjl3nV16s4m/txdFVQ/M6J6IkcfgDhle6aFLlw+87tA+nigAQ34n/zuzypDfhc9u
      pVg1mr1lSlV63I4934De+vb2aA8fTK8xEnQR9Ti4tZ7icl+Q2a0s57r9rLYaTyeLFfx2K42m
      zlQszZmwl3xFI1E0KiMA9LgdXF+O80qXl0ShzGarNHmyUOZ00E2+enj1qDYax96B/qhEGvJT
      j/eOv5j2eJ/V9tiCA4pFRBBsiCYzWvPgamWzGP0bdv1Hu0hfVzBcULVRqmk4ZJFEsUzQobCV
      L6E1mtgk47RiVePWegoBaOo6xZohJM3WULZLIqNhN9s7D5WifKXGem6HsYiH2y3FOuhQ8CgS
      n68m8SiyYUVy2TDvs34IGJao68txet0OFpIP6/p3OFlkK+W9MbCf3WA3v2Ijrx00Nee1Cl5Z
      IVc7uLI/KhDt5okCcGczRaGi4bRKFKsayWKFYlVjOOCiNe8z3xqEOuwNyPlkjlq9wZDfxUcL
      G5wJe1hNF/aEpqzVCak2PpheZSzswWISEAQwCQJnQh7MJoF7sTQDXpXb6ym6nIYlotdjlAmR
      LebO4H8Kt373e6rlMuH+PpJr6xRzORS7neiZURKra0RHT+Nrbck6PEUAChVjNt8NY9jeqWA2
      CQjAjdUkwN62aP/vuz9nWp1VJjeNsORKq4dttlzjN1MrxrFYeu/8eOGg5C+1engVqtpe55aj
      kFycJ/BIKmR6dRlnpAuL+HyyRxySiF0+3iUcwClJ5Oslo/yLzUaoL0qtXKF/fIzt2BZ2p5PM
      VpzTFy9ic36xJh0vC0eyAklmM1NbGZq6jkMWDwjASaFWKrFx7zbVYhFdh1I2jS86QGZjlXx8
      C8luJ7m4gEWSEBUb5WyWrrPnkO3t7+NbrtfJ1o4/r7bWaCCJRtCd3eViafIewxPnsTudCCYT
      kiwT7O3hweQ9wv19eMPPVqYtghm/cvRnoooS5frJ0sWexhMF4MpAmFqjwf2kYd3RGjpem8xa
      tohHkTnX7ePaYoxKvUGzqfPmqS7ihRKpYoWox4EiWbi2GAPgtb4QJhNcX47z88ujvH/nAQNe
      FYvZxM21ZFtvKLO+StfZcyTvz1HJ54hO/BVL1z/B7gvg7x8kvbpM7/mLbM1Msb38AJvHRzGV
      QLYPtPU6vi6azQb+7m4Cvb2YWgKxy9i3XvvCn1PXm+S/REhI8wgtk46KruvcuPYh9+NVfvyj
      v0cyC0x+9iGBV94m/IwWCs3GDtMzW5w9e7C42BMFIFeu4rEZIbwRpx3ZYiZXrqLKIj67lWTx
      4cMJqgqyxYzfoTCzlcHnsO712fLbrRSqNeySyHjEy0w8g67rTG0ZFqB244p0sTF525gNPT5W
      b90gcGqE7ZUl6pUy4dFx1m7fRCuX8PUPUiuVsPtOVlXpr8LA+PjXfQnPRBUfbx1TxcPpkZZ9
      hpCd+BwzSQs/uBjg1x9ex5SZ5s7du7wTPsv7v3qf/rFLmIvrrKxuYrG7cAZ66bFVuDm7zhuv
      neGX//kb3n33Z3z80e8ZmXiDZubBkwUgWaywmilyvsdPufawDqXZJNDU9T2lFox9faZUwWQS
      OBvxkq9qrKQL+GwyAYeCQxKJeh2sZ3fodtnJlKospo5HkbWqTgZfe+PQ+85Wple1WMAsSdjc
      XkIjo8dyDY8SW7yP6vPhcHsoZtIvfcujolYl+0j6o1dWWNsx9EaPpJBpbR33W4G00g6eQBBv
      0E315g1MhPnet0Xu3rjG937yLn/6v/ew2hR+/IPXmSwEWZv+lLsr24wP9oDDz5Ur36USnyc8
      PEEuFae4/ZQ2qfVmk6jHwbXFGF0uG1pDp1jVqNYbiGYz2/vajpa1OsvpAiZBQGsY55kFAUWy
      MBVLI2AoxYWqhl2yUK03OBMyLEC7LUmfF7JDJXr+0nP7f7skllcoOtMUMxl83TU2F+YJ9vUT
      iH7z0k+fhU9RHmME/eq4B85R/viX/Ptkg3/66c/5//d/xe3FEj/80b/wP+/9G31nLqKKGhbF
      iVu3UguFsAVVppfifH8iSCn9W6Szf03sDx/TNzqB36Ug6I94LP71vT98I1Mi/2a8l5LJsDSV
      shkssoz0hKoGjbrG1swUjkAIV9gwCVbyeSR7e+sCnQt7yNbKbCzMs3znDhNvf5/NhXmajQZ1
      TUNRVQZePffsD3oGXquVqMtGrdm+UAiXLLP1JWKBPLKVSqP2WD/ALj75cAK8V3446+9fAS76
      e/Fajx6U90V5IYPhEvfnsEgyajCE6g+ST2zR0GrspLcJnx6nodWQVSeZtRUatSrlfBY1EMJi
      tbJx7zbOUISd7RRSqy6Qu6vnK1WFcPr8XPrbH5KOxfBGutBqVfKpFO5gqG33nK62NxZI7BTG
      +mbS0GrkYhsICLi7e0jcn6PRqgvkDIaplopYRJHEwiyKy0Mutkno9BlyWxvspNN4W3kD2ytL
      NOt1Xv27f/zKdYHUVgxQZOihBSLUf7KtThaTCf+XmHkdokTlWAMddVKpbfx+w3CRy+VxuQ5m
      8BWzKeYWVzDLds6NnWJ6eo7TY2PsZBLEMhVGT0XZXF1CVAMvXlJ8Zn2N4atv0TX+KugQm53C
      PzBEpVggvjDb+iuB4PAoA5dfR7TZUFrpiHavl63ZKSqFPFbVSfDUCOm1FRrayfN3HDf1ZpPt
      SunIX7na8WbT7eTSfHLjFgC63uCDX/8X8w/WWFmc408379DQweH2c+HCBQrZFDev/5Hu3m6u
      X7/J7akFPHqKP0/PspJpMj1568VbAfwDxixrcxuz7sQ//DNgWIFyW5vINjuSzY7iMuoC9bxi
      RGZGRo3ANGfI0Al8fSd7hj7JeOSnK8GqZH20YTyqZN3rIq+KMoIAVrORYrsfu8tHNGIk9wuC
      mejgMMMD3dz4/BavDnqYvJ/k/HCA5PIMof4x0ivzuF0uzNTQakUmF/P0dHmwRybIlVMvngA8
      idDI6HMze77sZKqPD4bbxQR7Su4eAge85rlaGbdkOOT2k9veYm5uDtnmYmxkEEnQmF9aRyvl
      +fxuhqELb6LrOnPraa5eHWMhJ/Hpp59hc/kp5jPYHVawhnjw50+wyPLLIwAdXgxcvjDv/OSd
      vdcXr1wF4PTgQXPy1atGE/Lh8QsM7745/jA2bHTEqCDYEYAOzx2HJPPoHkgVH26LHKKMCfAr
      DizC8aqpHQHo8NwpatVDQYICB7dA2VoZv/KMAJ82cEgARgKuQwrKN4EBr0pFON7kiaMStttw
      PIdwaFWSUCTQGu27f7dsRbIcffZVRYlq0/x0JVg8rAQ79sUBOUQZj2xDFa2GcnyMHPIEd+jw
      MvHC+QE6dDgKHQHo8FLTEYAOLzV/AXqXAenkpigaAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Make' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Make/Model' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nO29d5AkWX7f93lpyrt21WZ6vNtZN7O3s7szu3vrDriL44FncHeSghRwBCQE
      QwJAAx1DjFCQCukvRQihkEKgC0ZIDBIIkoogRCNBPC1xJ+D2zLpbNzszPd097U1Vl/eZlZlP
      f1T77uqu6q52M/n5Z7aqs7Je975vvvd+VkgpJS4ujynKUQ/AxeUo0Vb+I5VKoev6UY7F5THD
      tm1UVT3SMawKQNd1otHoUY7F5TGjWq3i9XpRlKPbiLhbIJfHGlcALo81rgBcjoyj3PqsjuGo
      B+Dy+HIcLPCuAFyODFcALi5HjCsAlyNDCHHUQ3AF4HJ0uAJweaxxHOeoh+AKwOXxxhWAy2ON
      KwCXI8N1hLm4HDGuAFyODPcQ7OJyxLgCcHmscQXgcmQch0OwtvslLi6tIR2JZdQo5dOU81mK
      6STlQhajXMKoljEqZay6iW3Vsa06w90aLz7Ziy10fv/OWYqOj2jQS9DnIRry0h3x0xcL0t8V
      JBzwEvJ70NTOisYVgEvbSClBSjAtZKGCLNWQ5RqyYjA9fZ8/++Bft3SfXi2AqIDjwMhMiLTR
      PCfdq6t0hf2cHYhytj/Gmf4o18720hX2oe5jJXEF4NISUkrMVJ7y2BylBzPU5tLEr5wh2Bvb
      cF3YF9nDvQWms3NckFG3WcyUWMyUePfu3Or78ViQK6d7eOZCnGcu9nOqN9zWd7sCcGmKU7eo
      TifJfzpOeXQWI5UHe810WU3ntwjA5wmgqTqWXW/5eyRg7SKAZiRzZZK5Mu98No2qCAZ7w3z9
      6ypPxq8wEBhGV3audOIKwGUD0nGoTCcpfDxK4fNJ6pli02trua0/8+o+fB4/pWp7AjCd/e/t
      bUeSri7xWWGcO6WfENajXIxc5VrsOoOB4W2jT10BuABQL5TJfzRG9v37GAvplj5Ty5WQjoNY
      twdXFIWgP0qpWmj5u21HYMvOhEZ3DZQRy8Mp1vN8nH6Pj9Pv0eON80z381yNPUVIX9umuQJ4
      jJGOQ20+Teand8h/NIZjtv7UBrDNOmapijcS3PB+NNRFIjPT8n122/+3jqR7aPsVK20k+f8W
      /h9+mvghV2NPc73nBeK+QVcAjyNSSiqTiyy9/QGl0Vlw9p6bW8uXtggg5I81uXp76h3Y/gBo
      HptoX2XHa0zH4LPMh3ye+Yiz4UuuAB4npJRUJhZY+g8fUhpp/Qm9E7Vckejp/g3vRUPdbd2j
      anVGANG+CqrWmpgdHCaKD1wBPA5IKanNpUj8ybuURmf29cTfTDVTQEq54YAZCrRXYrNTW6Ce
      U80P7M1wBfCIYxUrJN/+gOy795CW3fH7m6UKjmWj6mtTKeSLoCgqjtPa9xkd2AIpikPXQLnt
      z7kCeESRtkPuwxEW/93PsCu1g/seR2LkSwTW+QMURSXoC1Os5Fq6R70DK0AwVsPjt9r+nCuA
      RwwpJcZChoV/+w7l0bndP9ABqtnCJgEohALRlgVg2PtfAXpOldhLkQlXAI8Q0nHI/OQOi3/y
      c6TZ/tNwr9RypS3vRYPdLKSmWvp8J04kXYNbx9AKrgAeEcxMkYX/888p3m1t0nWSaraIY9so
      65pdhAPtmUL3gy9oEoztbZvnCuCEI6WkNDLD7D//U+xS9UjGYJsmVtXEE/KvvhcOHp4AugdL
      7DUg1BXACUZKSepHH5H8wfsHYuFpfSBQzRU3CCDkjyKEOIQCuJLYHqw/K7gCOKFUKxWm/+Wf
      Ur/TGYfWfqllCkSH46uvg/4IqqK1FRW6F1TdIdbvCuCxIpvJ8C/+6T+hNpXkTTGMJo4+tbCW
      3+iE0lSNgC9EoZw90O+N9ZfR9L1Xlzj6v5xLW1iVaf74n/0BM1NTLFHlFzJ5LOrsG4Uy9qZg
      unCg68C/dy/Or/W4AjhBWOWHVMf+J958doaAtzHpx8hzn4N9yraCdCRmaWMgWiTYmgD2Wh5I
      KA7dA3szf67gCuCEYBXuUBn/n5F2id6Y5Ftv1NDUhgg+kSkW5P6ehJ2gkt6YAxBuMSZor8kw
      oVgNb3B/ZwxXACcAq/A5lYl/APbaE/Z0v8OvvGoghMRB8hM5T14aRzjKrRli4RZXgL2GQnQN
      lPfk/V2PK4BjjlW8R2Xi74OzdXJfPWPzpZsmQkhMHH4s56nJw/MAb6aWb2SIrRAJxBDsPkOr
      ewqFkPSebj/6czOuAI4xdnmi8eTfZvIDCAHPP2Hx4pN1QFLA5GdyEVseTc1Nq2pQr66N1evx
      4/H4dv3cXsKhPX6LQHT/QX6uAI4pdnWOysP/dcO2ZzuEgNefq/PkuYYjbIEyn8rUkVmGjPza
      oVTXPPi9wR2uXv7MHlaA/Xh/1+MK4Bji1AtUJ/4h0motsVxR4KsvG5wdaIjgHlke0npSeiep
      pPMbXrcSE9T+GUDuKfllO1wBHDOkXaM6+Y9wjIW2Pqdr8M3XasS7GiL4QCZIyp1Xj4Oglitu
      WH2iLRyEa22uAIrmEOntzO/mCuAY0Uhd/JfYpZE9fd7vg2+/aRAJOthIfiIXKEmzw6PcGbNU
      xamvHcRbcYaZbQog2ldB93bmnOMK4JggpaSe+jPq6Xf2dZ9oSPLtNwz8XkkVix/LeeqHeCh2
      LBujuPZ0biUqtN1DcM/Q/pxf63EFcEywKxPU5v4POpEe0t/j8BdfNdBUSRaD9+QiziEeimvr
      DsKteIPbcYQJIfcV/LbhXtLvCuA4YNerVCf/N+jgduXCKZuv3m44yqYocke2Vu2tE1RTa6mQ
      Hs2L1+Pf4Wow7dZXgGCshj/cgb+TFISs110BHDVSSu59eofPZ85gWLvbzNvhyfM2b3zBBCSf
      k2ZadsZyshu1Qnn1ILySIL8T7VSF6BrcW+7vZrzONTzygiuAo0RKSXJhnoW5GYpGD58v3iZb
      7aNTuxUh4MUnLZ5/wkIieVcukpEHVyFiBatmUl+uRCGE2NUU2voKIDuy/1dkjKD9MgLhCuAo
      MQ2D+598xMqMrzs+Hiw9z2T2SewOlQsUAt563uTaOZs6Du/IeSoHHS4h5YZE+d1iglpdATw+
      i1DXPgUsFcLWl1DwAu4h+MiQUjJ69w6muTnMQZAsneFe8iUqZnvNHpqhqg1H2em4TYk6P5Hz
      WAdsGVofGLeTL8CRra8Asf4yQtnH8ighYL+ALgdW33IFcESkkwkWZ6eb/FRQNmPcTbxEoni6
      I1sijwbffL1GT8RhiSofy6UDDZeoZvKr999pC+RIcFoqjS7pHS7ua/+vyVP4nec2vOcK4Aiw
      bYuRzz7ZdQLaUmcy+xTj6Wep2zt3OmmFoB+++6Ua4YDDA3KMHGAijVmsIpe7yQT9EZQmaZu2
      FNgt6FBRJZFdKj/vhJA+wtabCNQN77sCOGSklMxOPKRSbvUwJ0hXTnFn8WUKtf2nGMbCkm+/
      aeDRJR/LFPMHlEjj2DZGoXFvvzeIrnu3vc5yBFYLK0Ckt4LHt8fKFxKC9ssobO1f5grgkDFN
      g4kH7Yc6mHaA+8kXmMtf2PeWaKDH4RtfNBCKw8/lAoUDSqSpLp8DhBCE/NtnhzVWgN0FsJ/g
      N49zCa9zddvcBFcAh4iUkomR+9Tre3PkSFRm81e5l3xx3z6Di8M2X7llYgqLP5fzmLLzdYVq
      mbWI1GYHYUuKXRvkCSGJxfe2/VFkhJD9elODpyuAQ6RaLjM/s//ShQ2fwcukywP7Wg2euWjx
      8rN1Chj8VC50PJFmfYZYM1Oo3cIh2B8xCET2sEpJhZD1BgrNHxauAA6RqYdj2FZnbPB1x8tY
      +gZT2Ws4cm//G4WAV56tc/2SxfxyIk0nsaoGVq2x2kWaWIJsR2DtIuLuwRJtlz6S4HduoMvh
      HS9zBXBIVMolFqY7XbhWkCid4/PF25TN9htUQ0MEX7llcvm01UikkfndP9QiUsrVwLhmK0DD
      CbbzCtC9h8rPmowTsF/YNSfZFcAhsGL5se2D8cBW6hHuJl4iWTqN3EO7UUWBX3nF4FSfzfsy
      wZLsXJHd6vI5IOALoSpbCxHulg2m+yzCve2NR0gvIfstRAuFD10BHAK2ZTE3PXmg3+FIjYnM
      U4ylru/JZ+D1wLdeN4hGbH4i5ynJztT0rGUb1huP7sO7TYL8bl7gWLyMqrZ30AnYL6HJnpau
      dQVwCMxNT2LVD7ZIbANBpjrAncVX9uQzCAUk336zhuI3eUfOUe+AZcgolnFsB1VRtzWF7hwH
      1H7ur8e+iM95uuXrXQEcMLZtMzc5cYjfKDBtP/eTLzCTu9ximMEaPVHJN14zKOk13pfJfSfS
      ONaaQ2y75JidVgBFbS/5RZFBgvarLdUiWv1My1e67IlcOkW5dDhx+OuRqMwXLnI/+QKmtb0X
      thmn+x1+5RWDKZHn8w4k0qwExm3XPnWnbLBQV611768UBK3XUQm1NTZXAAfM/EyzgLfDQFA0
      evhs8VVS5cG2Pnn5tM1XXjL5nDQz+0ykWTkHRINbG2jvVBOod7j10i4+52k88lzbY3MFcIAY
      Ro2lhfmjHgaW42E8fZ2JzJPYjrr7B2iYR69ftrj1jMm7cpHsPhJpqrkC0nEIbeMLMJpsgYSQ
      dLeY/KI6PQTsW21tfVZwBXCApBOJAzN9to8gWTrL54nblFvMMxACXr1e54lLxr7qjtbLNey6
      TTiwNSq0mRnUFzLxBVsIGZEaYfstFDx7GpsrgANCSklifvaoh7GFaj3M3cTt5TyD3Z+YigJf
      fskkPlTlnX0k0lQzeVRFI7ApP7jZGaB7qISy22IlV0ye8V0ubI4rgAPCqtfJLCWPehjb4kiV
      yexTjKaeo27v/uTUVPj6Fw1Ed4lf7DGRppYrIoSy5SDc7AzQivlTl6fxO8+0PZb1uAI4IFKJ
      RZy9tj45FATZaj93Fm+35DPweeE7bxmkQhlGaa0D/HoaAhBbmmYY22yBNI9FuHtn76+QfkLb
      JLi0iyuAAyKdTBz1EFqikWfw4rLPYOfpEA5IvvNWjXueJIttJtIYhTJ23driC9huBegaKKPs
      5P2VgpD1Gir7z5l2BXAA2LZNNt3ZyMqDRKKs+gxq9Z2LWPXGJN94vcoH6gKFNgp52aaFVTW2
      1ArdWhZR7lr7x+tcxSMvtvzdO+EK4AAoF4vUqodfmXl/CIpGN3cSjTyDnTgz4PDG7TI/FXNt
      JdJU0nnCgegGc+XmFUBR5Y6dHxUZJWi/sieT57b368hdXDaQTS8d9RD2jO14GEvf4GH6aSy7
      eTTltXM2z32hyM9ZaDlcopYrNhLk1bV9+2Y/QDBWw+tvYm6VKmHrrR0TXNrFFcAB8IvEB8zU
      Z6k6VZwjale0PwRL5dPcTd6ibEa2zToTAm5esxi6luWTFjvSVLNFNFXH71nrGlPfZAZtWvlN
      gt/+Appsz6O9G26n+A4jpcMP5/+UdCWFQBBVosTVXuJaH31qL1EliuhEcctDoOEzuMXp2Aj9
      oakt+3Ih4I0v1PmTapLJSS/nt6m6sJ56pYZtmESCXZSqjcSbDWcAIeluYv7U5CAB5/mObX1W
      79vRu7mQLCXI1RpmQokk5+TIOTke1McQCHzCR1ztpU/ro1+NE1WjeMXevJiHgSNVprLXyNd6
      uNB9B13dePBVFPjyLYP/y5gjvKDTK3Y4REtJrVBu9AxYthGsPwP4AnUC21R+FtLXEZPndrgC
      6DCh9EP+i9w005qXGdXLrOYho+jYgBRQlVWmrBmmrBkAvMJDTInRr8XpV+P0qj14hfeYrRKC
      XLWfO4sRznffIepLbVgNPDp85dUq/+7tWQK58wRE82lVTec35AevXwG6BktbzZ8SgvZtNPZf
      E2k7XAF0GC35Oc/UKzxTX7MClYTCrOplRvMuC8NDUvVgC4EhTRJ2koTd8BoLBDElurxl6iOu
      9hJWwk0rqx0mpu1nZOl5hiIPORUdQxFrkzXog6++WeLf/2CGm5Uz6GL7p3UtVyLcuzaZ17dH
      6h3euv3xOlfwOtc6+FtsxBVAh3FS41veC0mHJ6wqT1gN76YDVIVCUtGZ0taEkVJ0KkIh6+TI
      mjlGGEUg8Av/8jkiTlztI6pG8BzZtqnhMyjUerjQ8xl+fc1kGQ1J3ngzx8/e9vKcObjtKlbL
      l4j7hlb38iueYFW3t3h/FRluO8GlXVwBdBApHZzsw12vU4CgdDhvG5y3DTAajZEqQiGt6Exq
      XuY0D9OqlwXVQ1WUmZQVJq1GboFPeIkqUQa0fuJqH31aHx70Q9w2CUpmF3cTtzjbdZeewMLq
      lqi/W3LjtSVGfujhqtOzZUxO3UIxQde9SLkWDBfrL6Pq6yxmUizX9NnZMbdfXAF0EukgC+21
      N11B0BBF0DY4sywKaKwWi6qHWdXD1PJKsahaJKSxYdvUpcRWD9a9ag8RJXzggmjkGdygUOvh
      TOw+mtqw358btKncnmfhpz6GtsnQsksmfk+AumOsmli7N3l/fc51PPLMgY4fXAF0lnoVWWs/
      UGwnFGDINhmyTV40S0igjiCnqCyoHqY0H1OalznVZNzOMCIeIBAERIA+rZd+NU6/FieshA5s
      27RUPk3JjHGh+1OCngJCwLXzFh9Xpsl+fIGuTY6rSjpPKBDFkktIQCjOBu+v5vQRtF88kLFu
      xhVAB3H2+PRvBwF4kMQdi7hjcX35sG0DWUVbFkXDAjWvZXlPmUQKgVd46VG7iat99GtxepRu
      PMLTsVVizWfwgIHwFEJIrj9Z4/3KNMbIBbzrLENGoUykv4tkMY2UEOwy8AWXq2ZIbbmmz/7L
      wbeCK4AOIosHL4BmqECvY9HrWBssUOVlC9S05mVKSzGrTnJH9eAIlS4lRlyL06f20qf2ElZC
      +xKERGU6d41CrYfzPZ/hUU1u3izxbnWGwemzqMuWrHq5RkANYjoCicAXWJn8yyZP2bufP0Vb
      uALoILNFhU+ylwiqJkHVxKfUCSomAbWOLmw04aAJG+UQTfxB6XDVqnJ1nQWqIhSWFJ1JLcGc
      NsGE5uMXqheUIP3LgohrcSJKBH0Hm34zcrU4dxZf4UL3Z0R9KV54JctHNS/9yYZlSDoOXtuD
      6ShIyar1xyPPt1XTpxO4Auggczmbd4tnt/mJRBMOXmHhUWy8ikVQMfErdYKqiV818S+/F1BN
      AkqdgGriERsjLTuxW1FomGVD6yxQsCaKKW2CWc3DZ6qPvB7Fr/UQV/uIa33E1T5U1JZWibrd
      aPg3EJ5kOPaAp15LMPq2l+5Co2KbZqqNfGDRSH8UMkDQal7G/KBwBdBBKpVmIdACS6pYUqXc
      RmycirMsiMYqElBM/Gqd0PK/fqVOSDXwKhZeYeNRLDzC3pNQAtLhrG1wdoMFapaEojOjeZnS
      vLyvBah74nj1wcY5Qu0hKAJNnXQShYXiBQpGDxd7PuH8mzMsvO0lUAnhFE1QfHiDJv5wnZD1
      JVSC297nIHEF0EHqZuc6vQPYKBRtH0XbBztUVhRIVOGg4qArDn6lviqaxipjEFDqayvO8grT
      +ExjddpONAow6NQZNOvLFqg0JrPklg/bc5qfOU83de8pgvoQXVqckBLasm0qm1HuJm5xJnaf
      vi9Okv/RFZSSit4boaunjFec2VNNn07gCqCDWB2q/d8ucmWFQcWwoWTvXglOIPEKC12x8SkW
      PqW+uvUKLq8w61eelX+9QtLv1Ol36tyol6GawuYBWUVjUfWQ0GNkvUM43mHwDNGr9qAJDcvx
      8DDzDL3BOUK3pqj85DzUffSeqhI4YG/vTrgC6CCdan5xGEgENalTs3WKLSd1NUQTUBtbr5WV
      xK9YBFUDv2JxXqkRUO/jFZ9jqw4pj47hHaTqG8bwnGLOHiDivU739Rm0qSj9sWfRZf9B/qo7
      4gqgg9hO5/tsHS8EhtQxLJ2sFdjhOomyvLVShYNH2ATVAn41g+q9RzbURTIyjDpc5lxZYqrT
      GHoUW/FgK17abwezd1wBdBB110pOjz6aP4Qe7kIPRtHDXQhFQwhBUNMYqNXwpZIYfhWP+gn/
      RlkgvPgxX1FVXkBQkxqVao2ao1Dz9FL19KyKwREaVU8vNW8vhh6j4u3D0LuQ2zTdaGu8nfil
      XRpo+uF4L48SRfei+oLooSiecDd6MIon0tOY8KEYQmv8DXTHoq+SoyuXoXtiBG38HkYlz4fP
      nCd+bpqJ4hRLhp8lp8Y/rMNIsJv/JDbAoFBxjBJ2MYGV/wy7mgN7owVArv6rUNcjVD09VD29
      GJ5uqt5eDL2LirePmqcHU49SV4PUteC2K4srgA6iqid/BRCKitB09EAEPRRDD8UaEz0UQw93
      oXr9KJoHoWycTEJKgmaF/myC3nwWX2IRMTUGiRlk3WDq7DDvvXyD1wbvkJ/5mLuBs6yYtiTw
      w3KGz2pF/lJskBf8UTy+MHrvRbDrWKVUQxCFRWS9hliWgMDBW8/hreeIlbeGoQPYQm9srVRf
      QyR6jJq3t7GaeLpdAXQS3XN8Uxs3IlC9fvRQFD3UtTzBo+jhbrRAGM0fQlFb6K/lOPRWsgwX
      k4QrVTzZHMbCPGJ2HKXcCAqs+n389PZtJuKSv9z/GYsTn7AQ6CZpbnWILNl1/pf0NC/5o3yv
      a4iYqoPmQY8NoceGGuHm1QJWMYFdSGBX0uzWJ1aVdVS7DnYZv7m114ErgA4SDB6+I6cZiuZB
      9QXQghE8oS70cBeecBd6sPEkVzQPCNFe7I+UBOtVBkopBktpIuUqdcOhupTGmR2lnp5bzdp1
      hGDi8gV+9PQTaOocf/X0KNMP71Ou1RjtjmNXm9f+f7ea565R4i/HBnk50IW2PEYhFNRADDUQ
      Q8avIG0Tu7SElV/ELi0h6+0393MF0EH8/p0sIx1GKCiajuoLNJ7g4a7GRA9G0SPdaL4Aiu5F
      7PNgrjo2sVqB4UKCwVIazZRUpY9qNk9hdgxt8SG6teYAlEAxGuG92zf5IOjnkjbOr52eYWbm
      IblCnnzPMPOV3R2GRcfmH2Vm+Uk5x/e6TjGkb/RtCCEQmhclNoweG0Y6Nk41j1VMYuXncWoF
      aKEkjSuADhIMt9eepxUUjw891IUejDS2K5GuxutAGC0QQdE6f/D2WiYDpSWGCwn6y1kcW6Og
      RsmXVMTcGPr8KN7K1ie4owgeXLvKBzee5m4uxy8H7vL1wQSLiQUSS0tIIZiODlGdb61spAQ+
      M0r83cQo34kO8MuhHtQmK5ZQVNRgN2qwG+/AEzhmBau41Dg7FJNgby86VwAdJBxuv1m1UDVU
      bwAtEG5sUUJd6OHYqoVF9fpBKAea3aU4DrFagaHSEsPFBF2VIlUlQEGNMmf2oixOos/8DG8u
      uXoAXY8Esj3dvP/Ki4yGg0ylFvm14Um+2JMhnU0zOdOogFGMDTBba99XUpEO/zQ3z08rOX6j
      6xTnPbunSSqeAJ6es8juMyAd7EoWq7CAXVzasDq4Auggsa5tSncIgVA1NG+gYR9fb1UJdaH5
      gygeX0uHzo4hJV7bpK+S5XRhkcHiEj6rTkUJUlCjPNR6EUuzaDPv4F+aQVjNtyy2qnDnxjPc
      feYak8USmeQcv31hghuxIsVSibGJycZXIkjEz5Ob3XvPhDGzwn+XHOMvhPv4RjiOV9ndYSaE
      AKGihXrRQr1IKZFmGauUwsrPuwLoJB6fj75Lz2BpKxaWhnVFC4RR9fY6NXYcKYkYJYaLSYaK
      SeKVDIojKalhsmqcsjcEuSX0mY/xLYyh1HYvf74U7+O9V18kGY0wmkyhWFn+zhMPOROoUTMM
      7o+NrnrHS9E+5iyBbe+vVKQpJf+6kOTjaoFf7zrFE972DA9CCIQ3hMcbwtNzDiGXizrm83mi
      0a1tLF1aR0rJ/30vQ7pyPGKCdLtOvJxpbG0KCUJmBQeFkhqmoEYpKyFkrYI2O4I+O4JSSG+7
      xdmM6fHwyc3rjD1xmYxh8iC5xJCnwPcvP6THW8eyLO6M3Ke8HB4ugYknX+WjhSyVavuWmmao
      wFuhHv7j6ACBPR723RWggwghCHvVIxOAkJKQWWaglOJMYZHeShavXcdCo6RGmPH0UVGCOLaN
      tjiJd+qHqJl5RIuN/CSwcGqQ9195kUIkzFwuz3Qmw/VInt+5OEVQs3EchwcTD1cnP0A52kdK
      8XV08kMjD/rtUppPa0V+s+sUT3vbT+l0BdBhugM6k1nj0L5PdWx6KjnOFBYYKKXpruURQB2N
      ohph0ROlogSRgJJdxDP1LuriBIrZ3mSs+n18cvMGD69cxHAcRhcSZCpl3upL81fOzuJRJFJK
      JmdmyObWKmNIIDV0hVQm29Hfez0Jy+R/WJrg1UCMvxQbJKq2bhlzBdBhor4DDodYdkYNllIM
      FZMMlpbwLsfK1IVOVu2moK5MeoEo59Dn3kefuYco59uOuneEYPr8WX5x63kqAT+FWo2RxBKW
      bfLdUwm+NbSIIhrbv/nEIgubWkNVwj0Ugl3kpu536A+wPRL4cSXHp7USvxYb4lYgitLCauAK
      oMN0+TUUAU77jRS3R0oU6dBTzXGquMSpYoJYrYgmHSRgoS1P+hgVJYBEQN1AmxtBn7mLmllA
      7CFMWwKVYIAPb91k5vwZHGA+l2cqk0UTNr91bobXezOI5cmfzeWYmp3dco/Uqatkc3nsQ2oY
      mHcs/l5mmveqEb7XdYquXVYDVwAdJuhV8esK5W1iXVpGSvyWwUApxaliwwMbsNY6tdeFTkbt
      oqBGGk96oYBtoy7NoM+OoC2M72i63A1HURi/cpFPXriB4fNhWjajS0tkyhXCmsXvXpzk2eha
      IdtSucyDiYdbmmRUwj2UIr2kRrcPVDsoJPBetcBdo8x3IwO8Fepu6kBzBdBhFCHoDeiUzfbO
      AYpjEzOKDBeSDJaS9FVyKNJB0PgfagqdkhIhr0apKoHGpHcclGIGfe4B+sx9RLW4r8TC1TCG
      V14kMTQAQpCvVhlJLGFYFv1eg79xaYLzwbXzQ80wGBkfw7btLfdKD16iXK12/PDbKiXH5n/P
      zfFuNcdvdp1iSN/aWskVwAEQD+tM5XYRgJR47DoD5RTDhSQDpSVC9erqBF7Z3sX3LlcAAA5f
      SURBVBTUKEU12tjeCAWkRBgV9IVx9Jl7KLkkogNtmGxVYeSpJ7jz3DPUPR6klMxlc0xlsjjS
      4UKwwt+8NEGfdy0237IsRsbHMLYpBlALRil19ZOamdv32PbLXaPM30mM8avRfr4c6kFflxfg
      CuAAGAhvHxYtpEPEKDNcSDBUShIvZ9HWdVmUgCG8FNUIBTVKVfjXigFZdbSlSbS5EbSFhwin
      M6ZWCaT7enj/lZfI9DVq9pi2zVhyiXS5Ycq8ES3w1y5OEtDWhOY4DmOTE5TKWx1mK5afuu2Q
      y+U7Ms79UpUOf5Rb4GflHL/RfYqLnkbgoiuAAyDi0wjoChXTxuNY9JUzDBWTnC4mCJpVlHXO
      psb2xktBjVBQY9SEb23SSwclm0SfG0GbG0XUSh2tnVDXNO5ef4q715/CUVWklBQNg5FEklrd
      AiRf6kvz62dn8SrrxiwlU7MzpLPbmzaNQIRi1yDZdObQDr+t8rBe5b9PjPMXI318LdznCuAg
      0BTBcyKPf/JzeipZfNuk9K1N+ii19U/6lS3O9D20+dHGFqcF72w7SCAx1M/7L79IoSu2/LWS
      hXyBiXQGR0oEku+eWuAbQwnUdaqTUrKYTDKfSDS9d3rgIlIIUplMR8fdKepI/riQ5N1K3hXA
      QXEpCBTXAr82bm82PemhscVZfIg+N4KanN6T6bIVVsIYRq9dQS4Hk9Vtm7GlFKlSYzujC4f/
      7NwMb/RtncDZfJ6Jmenm9/eFKPQOU65UqFZrTa87DsxZhiuAA2P4NFLVMByVohpdftJvmvSO
      jZJLos/ca5gujcqBlYeSwNyZYT68fZNSJNx4T0rKhsn9RJJqvbFKhVSLv35pgqcjW/v1lspl
      Rrcxd64nNXQZRyik0sfz6b8ZVwAHhcfD4tmbZObLGye9lIhqEX3mPtrcA5RipuNbnM1U/T4+
      vHWT6QtnV5/6UkoWC0UmUmns5Qnd4zH5/uWHG8ycK5imyf3xsR2r35neAIXeYWzbJntMDr+7
      4QrgoBAC/9lBWFh2Apk1tMUJ9Nn7qKkZRAud1feLFDB54Ry/uHWTWmAtiaRu2zxMpUkW157y
      5wMVvn/lIT2erUVILdvm/vgYhtHctCuB9NBlpKKSyaRwjtnhtxmuAA6Q0GAUvbCIOvYp2uJD
      qBuHVgGzEAnz0YtfYPbc6Q0rULFmMJpcorxqu5fciBb4nYtThLSt5w7HcRibmKBY2rolWk/d
      4yfXexopJekDDHzrNK4ADhDNp9NtTFOZuXdo3+kIwei1K3z6/HVM31oSjpSSZLHEeCq9zjQp
      ebMvzW+enUVXtq5IUkpm5udIZ3fez68+/VWNcrlMpXI0nt+94ArggAm99SaVn/7sUL4r1xXl
      g9svkDg1uOF9y7Z5mMqQKK7F7yhIvn1qcTWaczNSShJLS8wu7N72yfL4yPeeBjgxh98VXAEc
      MN6rV9EGB7FamEh7xdJU7j3zJHevP4W1rjyjlJKKWWckkVy35QGvYvNXzs7yxnI053bkCgUm
      pqda+v7MwEUcTceyLHL55vV+jiOuAA4YoeuEvvQWuT/8owO5f6anm3e/eGs1jGEFKSVLpTJj
      S6kN3tigavHXL22M5txMpVrhwfg4TgsHdUv3ko032kJlc/ktQXHHHVcAh0DorTfJ/6s/RnYw
      KrKua3z2hWe5//S1VdPmCrbjMJHKsFDY+DSOew1+79IE57Yxc65gmib3RkexWkiTlECm/zyO
      1gieS6W3lh487rgCOASE30/wtdco/eAH+77XSl7uB6+8SDG6tQ5RxTQZSSxR2mSyvBCo8HuX
      H9Lrbd5rybZtRh6OU9vB3LkeR9XJ9p8HoFypUDnmnt/tcAVwCAghiHztq5R/9CPkPvqImbrO
      Ry99gfGrl7Y89YGGlWcphbXJBv9cNM9/eXGK8DZmzhWklIxPTVIoNt8abSbbfw57udzLSTJ9
      rscVwCGhxeMEX3+d0ttvt/1ZCUxfOMsHt1/Y4NBaodmWByS/1Jfme03MnKtXLZs7l9rYwliq
      TmbgIgB1yzoxnt/NuAI4RMK/8hco//mfI1vcYgBUAn4+vH2TmXNntn3qV0yTB4klipvuuWLm
      /ObQ4oZozs1IKVlKp5idn295TAC5+FksTyPDKncCD78ruAI4RPT+foJvvE7pB//vrtdKYPzq
      RT65eYNaYGvVaSklqXKZseTWLY8mHP7zdUnrO1EoFhmfnGwrGslRVDKDF9fGccJs/+txBXDI
      RL/1Tco/fgfZtKk2FKJh3nvlpdW83M3YjsNkOsP8Njb3oGrxNy5N8nSkuOvkr1SrjIyPtWTu
      XE82fhZrOb+2Ujm6nN9O4ArgkFFjMaLf/lVy/+wPt/zMVhRGr13hs+efxfRurSUqpaRat3iQ
      TFKsbd1Gxb0Gv3d5gnOB3SdkvV7n/tgo9TZbuzqKSnrwEgjRePof06SXVnEFcASEvvQWpf/w
      pxu8w5meLj68/QLJgfi2T30pJelyhdHk0pYtD8DZQIXvX56gz7u7lclxHB48HKdaa99smes7
      jeVtbMls2yaTze3yieONK4AjQPH56Pr1X2Ppf/x96orSyMt99kkcbfv/HY0tT5b5/HaWFslz
      0QK/e2mSgLp7CPKKuTO3xWK0O46irlp+ALK53IkJe26GK4AjwnfjOvbXvsrbmiTb073tUx+g
      atYZabLlEcvRnN87M4tX3X0fL6VkdmGBZKq1Di2bKXQPYfpCq/dKZ0720x9cARwZQgji3/0O
      tZ//GOrbe2dTpRKj21h5YPdozm3vl8kwPTe7+4Xb4AiF9NDlVaFWKtUNFaBPKofXk95lC0GP
      ly9ffWpLkoztODxcSnNvMbnt5PcqNn/1/DS/2sbkLxSLjE1O7Hmsxe5BDH949XU7TrPjjCuA
      I+ZafICnBoZWX9fqde7MLzK37X4fwprF37w0wet9u9v4V6jWag1z5x736xKxavkBTmTYczPc
      LdARI4Tgl688yVw+x9jSEqPJJepNJmqfx+D7Vx5yNtC69cayLO6PjWI22Wa1QrFrgFporf9Z
      Ln9yPb+bcVeAY4BP1/ny1ad4mEo3nfyXgmX+7rXRtia/4ziMjI/vy1ElEaROXVl7LSVLqZNt
      +1+PK4BjwvnuHn7jpZe3SZqX3Ijm+dtXxzcUpt0NKSUTM9PkCvsLUivF4tSCsdXXJ93zuxlX
      AMcEIQRfe+pp3rx8Zd27DTPnf3V5YtuKDTsxv7jIYnLvLUkb395ocLH+sHHSPb+bcc8AxwhF
      CH77i2+QKpf5fH6W75xa4OubanPuhpSSdDbL1B7NnespR+NU1+39Lcs6NtWeO4W7Ahwz/LrO
      3/6lL/PXnqzwzTYnPzTKF47tUr6wFRpP/ysbnv7ZXB7rETn8ruAK4BgS8wd464VfR9HaawJd
      q9W4PzbWkZLklXAPlUjv6uuTHvbcDFcAxxTVN4D/wu+C2poILMvi/vgYZn3vKZcrrD791/Go
      HX5XcAVwjNFClwhc+G1QtoZGr8dxHEY3NafeD9VQF+VI3+rrRyHsuRmuAI45WugK/nO/1VQE
      K82pM7nOBKattDdiXfqlbdtkT3jYczNcAZwA9OgNAhd+Z8t2SErJQiKxpTn1fjACUUqx/g3v
      HWaf38PGFcAJQQtfa4hAaVSFWGlOPTk707HvaDz9L294+p+0as/t4grgBKGFLhO8/LcQnp6m
      zan3g+GPUOgZ2vDeoxL23AxXACcMNXCG4OX/msWCr6MBaQ3Lz2UQG6fEo3r4XcEVwAlE8XRz
      /Zf/gP7zv9Sxe5q+EMXujU9/6wQXvGoVVwAnFM0T4rlf+n0u3/wdhLL/iJbUcnuj9ZzEas/t
      4grgBCOEwsXnfovnv/IHePw9u3+gCcZya9P1PMq2//W4AjjhCCHoO/0yL3/rn9M7/Erbn5dA
      ZvDilqd/pVo9Ua2O9oorgEcEf2iAm1/9ezxx+2+h6ltLKTbDWm5ut5lHMe5nO1wBPEIIoXDu
      6f+U29/4Q7oGn4ddelJKID14EaluPEPUH8Gw52a4AnjEEEIQ7r7Ei1/7xzz92n+L7o02vdby
      +Mj1ntnyfj7/6IU9N8MVwCOKomgMX/0Wr37nX3Hmyf8IRd0aS5Tpv4Cjeza896jl/O6GK4BH
      GCEEvmCcJ1/5b7j9zT+id/g2YtnRZWkecsvN7dbzqIY9N0PIZV96Pp8nGm2+XLqcfKR0yC78
      gvGP/zF3yZIafmLTzyXTs3OPzQEYXAE8lkgpmS9P8bPknzFdmkDSiPS0bZvP7t5/5J1fAIpQ
      eXbohiuAxxlHOiSrC3ySfp/7uc9YWFpkenbuqId1oPg0H7fOvcqXrnyF8z0XXQG4NCiYeX4+
      +Q5v3/v3zOU7F2J9XBiKnOLNy1/m1rlX6Amu5Tq7AnDZgCMdxlOj/Hj8R3w09wHp8t5KqR81
      AkHM38Vzwzd57eKbXOq7iiK22nxcAbg0xbBqjC494P3pn3Nn4WOSxQS2PL7nA1Wo9IbiPH/6
      RV44c4uzXefxLfcya4YrAJeWkNJhsbDAncVPuZf4nLGlB6TK+6s81wn6Qv2c6z7PM4M3eGrw
      WQbCA6um3lZwBeCyJ2zHJlvJMJZ6wFTmITO5aebys+SqGQyr9T7IreJRvXQFujgVPc2p2GnO
      d1/kfM8FeoNx1E2BfO3gCsClY9iOTckoUqjlSZVTJIsL5Go5CtU8BSNPrV6lWq9iOzZ128S0
      TXRVR1U0vJoXj+ol7IsQ1IOEfGF6Ar30BvvoDfUR8UUJecNoHch9WI8rAJcjwzAMdF1HUY4u
      IMENhXA5Mo5Dh0lXAC6PNa4AXB5rXAG4HBmi1S5/B4grAJcjwxWAy2ONewh2cTliXAG4PNa4
      AnA5Mo7SAbY6hqMegMvjSycrW+8VVwAuR4YrABeXI8YVgMuR4foBXB5rXAG4PNa4jjAXlyPG
      FYDLY83/D4It9BMECB4OAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Model' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Price/Date' width='163'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 8' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAQ4UlEQVR4nO3d61Nc933H8ffZOxeBJMTFIAkJIUCABMiSbCeu7DZNxqnrOnGmmU4yk7TT
      J/0L+tjTJ33c6UzaSTrNNJ2mbdo67USp68lk4rviWEJCWNwFLHtnWRZYlr2dc3594OAmjXYR
      q9WR5N/3NaMHEjpfPr8VH37nnF1WhlJKIYSmXA87gBAPk6dWg0zTrPrY3U3IMIxaxUEpVdN5
      D2KmrPvhr9uo5SmQaZp4PPvvlG3bKKVwu921ilJ1FidnWpaFYRi4XLXbiGXd+1N1gp2tdSYn
      b7G4EkMuI8TjquoCGG4fZwaH2Uwsky3atcwkhGOqLoC/zs/0xC9Yz7up98m1tHg8Vf2Va1kw
      PPYUx5s9pLLFWmYSwjFVX9mkVyPE1jbxBpo5XO+rZSYhHFN1Adq6TtDWVcsoQjhPTt6F1qQA
      QmtSAKE1KYDQmhRAaE0KILQmBRBakwIIrUkBhNakAEJrUgChNSmA0JoUQGhNCiC0JgUQWpMC
      CK1JAYTWpABCa1IAoTUpgNCaFEBoTQogtCYFEFqTAgitSQGE1qQAQmtSAKE1KYDQmhRAaE0K
      ILQmBRBakwIIrUkBhNakAEJrUgChNSmA0JoUQGhNCiC0JgUQWpMCCK1JAYTWpABCa1IAoTUp
      gNCaFEBoTQogtCYFEFrzVHtgMhokvJomu5PnwsVLBLzSJfH4qboArZ3dtLR3cv3Da1hKoZQC
      wLbtfc9Svzy+mmMrzazlvAcx834es0ozZd33ruoClPIZrl2/xanBERp8bizL+uQLeb92g1dz
      bDnVZnFy5u48l6t2u+fjsu5aqzZj1QWYunENb1M768kEB5vq8bndKKVwu937nmUYRtXHllPr
      eQ9qpmEYNS+ArPveVSyAsm0wDAzD+I2PDV18FtO0AAOP6zc/LsTjoGIFb77zYz6Yid71Yx6P
      l0AgQCDgx3WXggjxOKi4AzQcOMA/fOevmBkd5sTAeZ6/NOxULiEcUbEAJ4cu8Y2vujHqmmhu
      aXcqkxCOqXwK9OZ/8YupINFIkNfeeMupTEI4pmIBGg40k91KM37tOh3tHU5lEsIxFU+BWk8O
      86WOQVzKRAUOOJVJCMeU3QHSq2H+6bt/y/u3FgjOXOcH//2Ok7mEcET5HUApmg+3Uec18B7q
      5s9++7yDsYRwRtkd4FD7MV7+/S8SmrpGcj3Jz96/6WQuIRxR8SJ4/OpbjD33AnVum9nFJacy
      CeGYigX4zO++xNyHbzIxtcxXXvy8U5mEcEzFAmylU/gaDtLZ3kI0eveXRAjxOKt4G/TO7XG6
      zj7LM/3tuL0+pzIJ4ZjKrwVqqOOHr/0zMx3N9Jx7hhefu+BULiEcUfnl0Mrgt77wEs+ceQJ/
      XYNTmYRwTMVrgENdvWwtj/OjH7/O7YWQU5mEcEzFHcBt5YgkMxz2l9jImU5lEsIxFXeAhdkp
      LvzOH/DVlz7H7akZpzIJ4ZiKBXj2hVeIjr/B99+4xtdf+aJTmYRwTNlToA/efJ3pxSi2J0CD
      x2Jq9g6dz5xzMpsQD1zZHeDcpcsc9uboGXuOFy+PcXsh6GQuIRxRdgeoq2/gqc98lm/94/d4
      321z7vkvO5lLCEdUuAukKNgeRs4O0dkzwIWRQedSCeGQsqdAsemrfO/KLzg7Okpq9n1+8MYH
      TuYSwhHlCxAKMnTxs/T29PDcs08TCssTYeLTx1Bl3lDRzmd478MJfD4vplmkZ2CUJ1oq/1yw
      aZp4PPt/t0Xbtmv+9nvVZnFypmVZNX+LQFn3/pQtgJMhpAAP/wvByZmP0rrLHvHtv/kWXe2N
      nHjqywx1yTtCiE+nsgW4fHGQv/72d2m8GeLIAR+nz1/mS597yslsQjxwZQswcOF5/qLzKFf+
      5y1Mw8fF0SEncwnhiIonYZM/f4v2s8/x8uUzfP8/33AqkxCOqXjV0DswyHf+49+47TUZvvyK
      U5mEcEzFu0BKKWzLxFYGHo/7rv9Rxq+Su0D78yjdDXFy5qO07ooJMhspirYLj2Gxlt6qOpwQ
      j6qyBchsJPmX736L19+5zs2rP+Xv/l2uAcSnT9k9I5fZJFu0ccdDBA418Cd/+KKTuYRwRNkd
      oO1YL3/8zW9wMACFQo7llYiTuYRwRMWrhomrP8PffonzPS0EGpqcyiSEYypeBB9uaeHqT3/M
      lStXuPbRglOZhHBMxR3gYOcpLo0aKGXTfKDeqUxCOKbyDtDWycjICL3t9dycWXEqkxCOqbgD
      xFfu8N74NKVsGleb/B/B4tOnYgG6+0eoazpC1vJw6sQxpzIJ4ZiKBVi88SavXQ1yvD7HteNP
      8bUXnnYqlxCOqHgNsL6W5NTQKBfGhkgm15zKJIRjKhbg0udf4VApxkfRAt/8yhecyiSEY8oW
      YOHDn/CzyTif/72XeeHp0/zoJ+86mUsIR5QtQKmQJRJbxVaKzdQqqc2sk7mEcETZnwdQZp4f
      /uv3WYym8B84zB997eu0NgUqDpOfB9ifR+l18U7OfJTWLW+L8hBnPkpfCE7OfJTWfR8JFJZp
      Yts1648Qjqu6ANvpJO+/+yaxjXwt8wjhqKr3tcZDbZzp7abwy99bloVSCsuy9j3Ltu1f+32x
      WOR+z8wsy/qNUyq3231fW/nu1l0ru+uu4VnoPWXc7+N7t8fybjwezz39PcuycLlcjq/7bmp2
      Yre7oGpC/P9jX3vrI658sFyraJ/4869eZKT/eNXHu1yumhbAMIxPftXKvWT8+yvXeHcqXrPP
      uesv//Qyxztb9/x7uxmdXvfdVF2AdDLK7MIypm+L5idHaPR7PgmyX7vfCXePNS3FTmH/O8me
      n0dVl++T4227phduu6Wv5cx7yVg07Qfy+MK9Pb4Pa913U3UBDrV28tnnO6s9XIhHQu0qKMRj
      SAogtCYFEFqTAgitSQGE1qQAQmtSAKE1KYDQmhRAaE0KILQmBRBakwIIrUkBhNakAEJrUgCh
      NSmA0JoUQGhNCiC0JgUQWpMCCK1JAYTWpABCa1IAoTUpgNCaFEBoTQogtCYFEFqTAgitSQGE
      1qQAQmtSAKE1KYDQmhRAaE0KILQmBRBakwIIrUkBhNakAEJrUgChNSmA0JoUQGhNCiC0JgUQ
      WpMCCK1JAYTWpABCa1IAobWqC2DmM9y8Mc7cUhhVy0RCOKjqAkxPTdM7NEJxI85O0aplJiEc
      U3UB8hY0+tzU+33sFM1aZhLCMVUXoNnvZm07z9ZOnka/t5aZhHBM1QXoHTzL2so8rcd7CXjl
      Wlo8njzVHujy+BgYPFvLLEI4zlBK1eQmjmne33WAUgrDMABIrGdY28rf3zxbYbiMX/uz7rYm
      Guv9Vc+0bRuXq3a73e5Dv7vuWriXjJHkJhvZ4j3PvNtjeTe9nQfx+/Y+Hf7Vf+taqfbfpmYF
      uB+2bQPU9IvLNE08nqo3OEdm6rpuy7JwuVw1LUG1GR+JAjyI74QP4rtMrWfKuh/+uh+JAgjx
      sDh7+8Y2iUcjRKJRSpbNxnqSWCKJrRS2WSQWi1GyFKVigZJlY5Xy5PZ4jsEs5oiEw8RW1z7+
      A2Wzvp5GKSjsbJNIplBKkct/fE2R28li79H5ncwG4XCY1EYGq5gjHA4TX13DVorMRor1zczH
      s/J5QJHNZqk40jaJRSJEojFMS1HK7xCNxX+5xgKxWBzTVhQLeSxbYRbz5EuVn1ws5XeIhMPE
      k6lP8oYjEfIli3w2QyK5/mvr3tkrI7C9lSYcDpPe3Ma2SsRjUbK5IijFVnqN9FZ2X+tWdolo
      OEwkFseyP56RSm8BYBXzxOIJLFtRKOSxbUWpkKNg7vGkqlKsrcbZyGQBRXptla1s7uNc25us
      rqV/JSN7ZnS0AMWtOMG1Hfx+P5hFMtkCdn6TyZlFbt0Yx7Ytxm9OkooFWd8uMjF+A5vK21o0
      OE/O9uD3+QBYDd3h7avXsa0i4xOTFLbiTC0mmJufxyruMPHR7B4pFTOzc/gDAbxeN/HFGXYM
      Pz6fl9JWjMk7CSILU6xu5Zmbn2c7FWV+JVFxYiEdYiVdwu/3Y6gCN25N43EZFIolbo6Po+wi
      NyamiYWX2cqVmBi/gdpj3StLc5iGF5/Pi9vtJRAIEJqfZjuX48bkNPmNELPB1MfrLmSYmJrf
      c92zs3MEAgE8Hje3b93ENtxM3BwnkwoxE1xjeWaS9E6Jufl5NldDLEZSFSfm15YIbykCfj/Z
      5AoL0Q0Sy9OEkhnGr19HmTvc/Gie4PIi+ZLJxI2JPde9PH+brbxNsVBgdWWBcCrL7MQ4mWyG
      m7fnya4tMx9OMzc/j5nfZHJ6seI8RwtQKCns/BYrKxFsjx+/yyQYinGk9SCmCtDVdRSXnQe7
      xI2fv8uh4wM0+NyVhyoXG6k40fgaVnGHSLrE0dYmSsUNGg48wfGeM+yshyntbPLOex8yePYs
      rj3OFT2GIhxaYX0ji2n42E5GiCbWSKxE6Bk8w6kTnSTX0mysRrg+HWZ44CSVRuaLYOfShMJR
      NldDbORKhFZWyOazKKOBzs5jYG6DVeDD996mrXeYuj2eW3EZLlKrUeKJdXz1DbQcbMDV2Eq9
      vUnz4aN0954lk1ymsJ3m7ffHOTcyXDEjKNwoQqEg6UyOAw11RMJhDG+AZCRBz0A/vcePEE9t
      sR5fYWJhlcHTxyrOzBVd2LkUoXCMQj6Pt66Brq4niMeXMNzNdHadwC5sgpnn5++8RWf/OQKe
      yusOhiJsp1eJraZYS2/Qc/IEJ7uaubMUoqWjmxN9w2wmlsltpXj76gSjo0MVMzpagIaWLp6+
      +CQ9bXUsR9O0dnYzfKaXWDQOhv1/W5XLy8CZftZWE3u+0O5o7yAXxkaxNpNMz9wik8sRXFlh
      dT2HbRdRqgguH976ZvpPtJNYS1ecqRQMj11kbGyM1fASR0+f4fzoKCq3ju1ykc+blEolvF4v
      B1s7OdJgsLldqJjxQHs3T18Yo6vZTXyjQEdXN2MjQwSXg2BYKBRggNvP0GAfiVh8z3V39w1z
      fmyMYjpBEVianeFEXz8utxfLLqLsPIbLj7/xEL1HW0ikNivOU8rg3JOXGBs7Tyw4T2pjm7Pn
      RvBaeVxeF4WiSbFo4vN6Odx+lGa/TSZXqjjzYGcPTz85ypGATbHpKG3+ItFEioaGJjBMFDbg
      Ak+AoTOn72nd9QcOMXRuBE82TR43pmVTLJjU19dhmiWUlcdwBahraqGno5nV9UzFee5XX331
      1T0+Z81kUnGm5++wtpnjWGcLs1MzpLcyHG7roslbYmFpmebWYzT6DfzNHTRY62RUAwfqyt9b
      jgYXWFwOYXrrGRkZ48TRTgwFPT2nSCeCBEMxuvsGsYs5untOE19eoOlIG56y97UV89OThCNR
      Gg53UNpKsri8gmXU0TfQz8LkDVKZEn29J8ntbNPXf5qF+Tu0tbWWvQuxkYwys7BIertE/+AQ
      G5EFIvEkncd7CbDDneUghzq6CXgUB1o68eaS5N2NNAbKrzu8NMdSMIztb+Ro2yGiqxucPPoE
      Hm+AZHiRlVCMnjNnMQs7nOztI7Qwx+H2Dtzlvh0qm7mpScKRGE2tXTT5FCuRKJYrQF9/L3Mf
      3SKdU/SfOs5ONkt/3ynm55dobztSdt3riTBzC0ts5m1Odh5hORSlYEL/6T7M7BpLKyGOdJ3E
      a1i0dBzH3oph+pqp95e/nVnntpieW0T5GjjT08XU1BQZ08fQwCkSwTlWIglOD56llM9yqm+A
      5fkZjrR3lN315S6Q0Jq8iEdoTQogtCYFEFqTAgitSQGE1qQAQmtSAKE1KYDQmhRAaE0KILQm
      BRBa+19NYACV5obExwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Trim' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Value' width='192'>
      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
      QmCC
    </thumbnail>
  </thumbnails>
</workbook>
